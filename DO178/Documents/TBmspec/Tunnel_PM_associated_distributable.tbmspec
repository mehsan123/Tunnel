<?xml version="1.0" encoding="UTF-8"?>
<Specification>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Data and Read Content&#9;" number="LLR_0100" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Get Data shall parse the tunnel lighting system initialisation data using a provided initialisation file</Body>
        <Parent number="HLR_0215"/>
        <Parent number="HLR_0010"/>
        <Parent number="HLR_0200"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Datain.cpp" procedure_ds="Bool TunnelData::DataIn::GetData(TunnelData::Tunnel * pTunnel);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise zone&#9;" number="LLR_0490" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall be configurable with the specified values</Body>
        <Parent number="HLR_0120"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Instantiate Cell&#9;" number="LLR_0010" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A Cell shall be instantiation with zero types of lamps, zero maximum lumens, zero minimum lumens, zero for the cell ID, and zero for the cell size</Body>
        <Parent number="HLR_0360"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="TunnelData::Cell::Cell();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Display  total cell demand&#9;" number="HLR_0090" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>In the nominal power state, after entering a nominal range photometer input or nominal days since cleaning, the software shall display Total Cell demand and lumens per metre</Body>
        <Parent number="SYS_0050"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamps maximum output&#9;" number="HLR_0231" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lamp shall provide an output of 120lm/W when used at the maximum output more text</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Adjust Powered Lighting&#9;" number="HLR_0125" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Given the photometer input lighting shall be calculated across all zones</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise Lamp Attributes&#9;" number="LLR_0170" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lampmodel shall be initialised by a provided height, width, and model</Body>
        <Parent number="HLR_0170"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lampmodel.cpp" procedure_ds="TunnelData::LampAttributes::LampAttributes(int h, int w, TunnelData::model m);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Zone default intensity&#9;" number="LLR_0480" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall set the default intensity to the brightest level for all the lamps in a luminaire.</Body>
        <Parent number="HLR_0130"/>
        <Parent number="HLR_0150"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Lighting control unit&#9;" number="SYS_0060" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system shall be controlled by a lighting control unit that will receive inputs from a power supply heath signal and an externally mounted photometer</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Output System Component "/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="System Data Initialisation&#9;" number="HLR_0340" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>All software data shall be stored for management, tracking, and reporting</Body>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Lamp Model Guide&#9;" number="LLR_0070" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A Guide lamp model shall be applied if a lamp must be fitted with an exit sign</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="TunnelData::model TunnelData::Cell::GetLampModel(const Sint_32 ThisLamp);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Set Emergency output level &#9;" number="LLR_0030" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>For emergency lighting, only the smallest lamp per luminaire shall be set to its defined emergency demand level to minimize power demands on emergency supplies</Body>
        <Parent number="HLR_0220"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="void TunnelData::Cell::SetEmergencyOutputLevel();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Lamp Minimum Lumens&#9;" number="LLR_0380" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>For each lamp type minimum lamp lumens shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Float_64 TunnelData::SystemData::GetLampMinimumLumens(const LampTypeID ThisLampTypeID);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Adjust Powered Lighting&#9;" number="LLR_0460" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Given the photometer input in mAmps and powered conditions, the lighting output demands shall be adjusted across all zones</Body>
        <Parent number="HLR_0125"/>
        <Parent number="HLR_0237"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Data and Read Content&#9;" number="LLR_0110" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Get Data shall initialise system data using a provided initialisation file.</Body>
        <Parent number="HLR_0010"/>
        <Parent number="HLR_0200"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Datain.cpp" procedure_ds="void TunnelData::DataIn::ReadContent(Sint_32 * array, char * Token, Sint_32 Count);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Cleanliness Factor" number="HLR_0110" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A percentage cleanliness factor shall be calculated depending on time elapsed since cleaning.  0% shall represent totally obscurity of the luminaires through the build up of grime; 100% shall represent complete cleanliness.  The rate of grime accumulation has been calculated by Waveworks Research Labs, their figures indicate a reduction to 50% over a period of 182 days</Body>
        <Parent number="SYS_0050"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise Cell&#9;" number="LLR_0020" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A Cell shall be initialised by initialising both the cell parameters as well as the lamps within the cell</Body>
        <Parent number="HLR_0360"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="Bool TunnelData::Cell::InitialiseCell(const Sint_32 LuminaireSetSize, const LampTypeID * pLampTypeIDs, const Sint_32 UniqueCellID);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Lamp sizes&#9;" number="SYS_0120" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A combination of different lamp sizes shall be utilised in each luminaire to allow efficiency to be optimised by the Lighting control unit</Body>
        <CustomAttribute name="Safety" value="False"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="Algorithms"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Tunnel Lighting Output Demand Calculation&#9;" number="HLR_0120" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lighting demand parameters for the tunnel shall be calculated and allocated to each zone</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Dimensions&#9;" number="LLR_0180" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lampmodel shall provide its dimensions, height, width and area, when queried</Body>
        <Parent number="HLR_0170"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lampmodel.cpp" procedure_ds="int TunnelData::LampAttributes::Height();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Failed Power Tunnel Lighting Output Calculation&#9;" number="HLR_0220" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>In case of power failure, the power required for all low powered lamps to achieve specified lumens output shall be calculated</Body>
        <Parent number="SYS_0100"/>
        <Parent number="SYS_0090"/>
        <Parent number="SYS_0030"/>
        <Parent number="SYS_0060"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Luminaries&#9;" number="SYS_0070" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Luminaires shall be industrial units sealed to comply with IP66 specifications.  Version 3.0 of the system includes provision for siren &amp; sign handling</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Output System Component"/>
        <CustomAttribute name="Section" value="External Interface"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Instantiation&#9;" number="LLR_0330" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>System data shall be instantiated only once as this data will be global for the system</Body>
        <Parent number="HLR_0340"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="TunnelData::SystemData::SystemData(const TunnelData::SystemData &amp; dummy1);"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="TunnelData::SystemData * TunnelData::SystemData::Instance();"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="TunnelData::SystemData::SystemData();"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="void TunnelData::SystemData:: =(const TunnelData::SystemData &amp; dummy1);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Lamp Model Announcer&#9;" number="LLR_0080" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>An Announcer lamp model shall be applied if a lamp must be fitted with a siren</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="TunnelData::model TunnelData::Cell::GetLampModel(const Sint_32 ThisLamp);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Lighting Adjustment&#9;" number="SYS_0100" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lighting shall be adjusted given photometer inputs and power failure conditions</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="States and Modes"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Lamp Emergency Lumens&#9;" number="LLR_0390" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Emergency lamp lumens shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Float_64 TunnelData::SystemData::GetEmergencyLampLumens();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Adjust Emergency Lighting&#9;" number="LLR_0470" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Given the photometer input in mAmps and emergency conditions, the lighting output demands shall be adjusted across all zones to emergency levels</Body>
        <Parent number="HLR_0125"/>
        <Parent number="HLR_0237"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Input options photometer input out of bounds&#9;" number="HLR_0030" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall handle out of bound range inputs</Body>
        <Parent number="SYS_0040"/>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise lighting system&#9;" number="LLR_0270" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system software shall be initialised by an initialisation file that describes Tunnel width and zone data</Body>
        <Parent number="HLR_0215"/>
        <Parent number="HLR_0120"/>
        <Parent number="HLR_0010"/>
        <Parent number="HLR_0200"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Set Lumens Output &#9;" number="LLR_0130" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>When power is sent to a lamp, the number of lumens shall be outputted to the display</Body>
        <Parent number="HLR_0100"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="void TunnelData::Lamp::SetLumensOutput(Float_64 LumensRequired);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Days since cleaning input interface&#9;" number="LLR_0290" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Number of days since cleaning shall be read in via the display input</Body>
        <Parent number="HLR_0110"/>
        <Parent number="HLR_0115"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Set PoweredOutputLevel  &#9;" number="LLR_0040" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Powered output settings shall be computed and assigned, such that lamps used shall be at a consistent setting for any given size of a lamp</Body>
        <Parent number="HLR_0090"/>
        <Parent number="HLR_0360"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="void TunnelData::Cell::SetPoweredOutputLevel(const Float_64 LumensDemandPerMetre, const Float_64 CellSpacing);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Type Get Power Required&#9;" number="LLR_0260" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The lamptype class shall provide the power it consumes for a specified amount of light in lumen units</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0233"/>
        <Parent number="HLR_0190"/>
        <Parent number="HLR_0232"/>
        <Parent number="HLR_0234"/>
        <Parent number="HLR_0235"/>
        <Parent number="HLR_0236"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamptype.cpp" procedure_ds="Sint_32 TunnelData::LampType::GetPowerRequired(const Float_64 LumensRequired);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Input option photometer nominal range" number="HLR_0020" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow a real number value in the range 4-20 mAmps to be input for photometer input</Body>
        <Parent number="SYS_0040"/>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Required luminance at ground level&#9;" number="SYS_0130" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The luminance provided at ground level shall be calculated based on the interior surface of the tunnel, the width of the tunnel, the efficiency of the luminaires, and the cleanliness of the lenses and the tunnel walls</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="Algorithms"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Dimensions&#9;" number="LLR_0190" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lampmodel shall provide its dimensions, height, width and area, when queried</Body>
        <Parent number="HLR_0170"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lampmodel.cpp" procedure_ds="int TunnelData::LampAttributes::Width();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Sirens and Signs" number="SYS_0080" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system shall include facilities for the handling of emergency exit signs and sirens.   These should include provision to allow the basic configuration of the system itself, in particular:  1. the number of lamps which can be positioned in a particular ceiling section, and 2. the current drain placed on emergency battery provision by each model of lamp, and by the system as a whole</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Output System Component"/>
        <CustomAttribute name="Section" value="External Interface"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Initialisation&#9;" number="LLR_0340" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>All system data tied to the tunnel lighting system as a whole shall be managed to provide data needed for system level data acquisition and decision making</Body>
        <Parent number="HLR_0340"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="void TunnelData::SystemData::InitialiseParams(Sint_32 * pSystemDataArray);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Lamp Model LightSolo&#9;" number="LLR_0090" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A Lightsolo lamp model shall be applied if a lamp is not fitted with a siren or an exit sign</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="TunnelData::model TunnelData::Cell::GetLampModel(const Sint_32 ThisLamp);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Exit Sign Spacing&#9;" number="LLR_0420" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Exit sign spacing shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Sint_32 TunnelData::SystemData::GetExitSignSpacing();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise Lamp &#9;" number="LLR_0120" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lamps shall be instantiated by default as the brightest setting, be assigned a lamptype, a unique lamp identifier, and a model identifier.</Body>
        <Parent number="HLR_0231"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="void TunnelData::Lamp::InitialiseLamp(const LampTypeID ThisLampTypeID, const Sint_32 UniqueLampID, const TunnelData::model LampModelID);"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="TunnelData::Lamp::Lamp();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Zone Lighting Formulae&#9;" number="HLR_0130" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A set of lighting demand straight line formulae shall be calculated to form a contiguous set for all zones</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Calculate and get soiling factor&#9;" number="LLR_0350" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Based on days between cleaning system data shall calculate and return soiling factor as a percentage of efficiency</Body>
        <Parent number="HLR_0110"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Float_64 TunnelData::SystemData::GetSoilingFactor();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Type Get Minimum Lumens&#9;" number="LLR_0250" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The lamptype class shall provide its minimum output in Lumen units</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0233"/>
        <Parent number="HLR_0190"/>
        <Parent number="HLR_0232"/>
        <Parent number="HLR_0234"/>
        <Parent number="HLR_0235"/>
        <Parent number="HLR_0236"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamptype.cpp" procedure_ds="Float_64 TunnelData::LampType::GetMinimumLumens();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Tunnel Lighting Output Handling&#9;" number="HLR_0180" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Commands shall be sent to all lamps to achieve appropriate output overall</Body>
        <Parent number="SYS_0130"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Dimensions&#9;" number="LLR_0200" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lampmodel shall provide its dimensions, height, width and area, when queried</Body>
        <Parent number="HLR_0170"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lampmodel.cpp" procedure_ds="int TunnelData::LampAttributes::Area();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Send Power to Lamp &#9;" number="LLR_0160" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>When power is sent to a lamp with a power setting greater than zero, the power setting  and the lamp identifier shall be outputted to the display</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0100"/>
        <Parent number="HLR_0190"/>
        <Parent number="HLR_0230"/>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="void TunnelData::Lamp::SendPowerToLamp(const Sint_32 PowerSetting);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Failed Power Supply&#9;" number="SYS_0090" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Where there is a failure of the regular power supply to the lamps, a battery backup supply will be used. In order to conserve the batteries for as long as possible, the smallest lamp available in each luminaire will be utilised at the same low level</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Calculation, Input System Component"/>
        <CustomAttribute name="Section" value="States and Modes, Algorithm"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Mountings Configuration&#9;" number="HLR_0350" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Mountings shall be configured by dimensions to describe the number of lamps within a mounting</Body>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Type Get Maximum Lumens&#9;" number="LLR_0240" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The lamptype class shall provide its maximum output in Lumen units</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0233"/>
        <Parent number="HLR_0190"/>
        <Parent number="HLR_0232"/>
        <Parent number="HLR_0234"/>
        <Parent number="HLR_0235"/>
        <Parent number="HLR_0236"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamptype.cpp" procedure_ds="Float_64 TunnelData::LampType::GetMaximumLumens();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Minimum lamp output threshold&#9;" number="HLR_0233" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>No lamp shall be used at a required output of less than a configurable minimum percentage of its maximum output</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get MaximumLumens &#9;" number="LLR_0140" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>When queried, a lamp object shall be provide the maximum lumens it can support</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="Float_64 TunnelData::Lamp::GetMaximumLumens();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Display Lumens&#9;" number="HLR_0100" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>In the nominal power state, after entering a nominal range photometer input or nominal days since cleaning, the software shall display lumens for each lamp, its power setting, and the lamp ID</Body>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="False"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Siren Spacing&#9;" number="LLR_0430" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Siren spacing shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Sint_32 TunnelData::SystemData::GetSirenSpacing();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Initialise Tunnel&#9;" number="LLR_0440" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system data shall be initialised such that all zones and their data is populated upon start up</Body>
        <Parent number="HLR_0010"/>
        <Parent number="HLR_0200"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options photometer input out of bounds&#9;" number="LLR_0282" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>If Photometer range values entered are less than</Body>
        <Parent number="HLR_0030"/>
        <Parent number="HLR_0237"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Zone Lighting Output Demand Calculation&#9;" number="HLR_0140" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lighting demand straight line formula shall be calculated for each individual zone</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Set Days Since Cleaning&#9;" number="LLR_0400" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Days since cleaning shall be set when needed</Body>
        <Parent number="HLR_0110"/>
        <Parent number="HLR_0115"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="void TunnelData::SystemData::SetDaysSinceCleaning(const Sint_32 Days);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Drain&#9;" number="LLR_0210" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A lampmodel shall calculate and provide its current drain when on emergency battery backup based on the surface area of the lamp</Body>
        <Parent number="HLR_0232"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lampmodel.cpp" procedure_ds="int TunnelData::LampAttributes::Drain();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Type Instantiation&#9;" number="LLR_0220" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The LampType class shall default to no output until initialised</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0190"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamptype.cpp" procedure_ds="TunnelData::LampType::LampType();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp Output Handling&#9;" number="HLR_0190" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Commands shall be sent to each individual lamp to ensure that appropriate output is achieved in each case</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options power failure&#9;" number="LLR_0289" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to invoke the nominal power state</Body>
        <Parent number="HLR_0070"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Mounting Area Instantiation&#9;" number="LLR_0310" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The MountArea class shall be initialised with the ceiling area available for mounting lamps specified by the length and breadth</Body>
        <Parent number="HLR_0350"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Mountings.cpp" procedure_ds="TunnelData::MountingArea::MountingArea(int l, int b);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp output&#9;" number="HLR_0232" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lamp output deterioration shall be computed linearly from 120 lm/W output from each lamp at maximum output, down to 0.2 x 120 / 0.4 = 60 lm/W at 20% output</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0110"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="False"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp extinguishing condition&#9;" number="HLR_0234" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>If for a given lamp the lighting demand drops to levels below the minimum percentage of the its maximum output, the lamp shall be extinguished</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Minimum Lumens &#9;" number="LLR_0150" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>When queried, a lamp object shall be provide the minimum lumens it can support</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamp.cpp" procedure_ds="Float_64 TunnelData::Lamp::GetMinimumLumens();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options power failure&#9;" number="LLR_0288" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to invoke the power failure state</Body>
        <Parent number="HLR_0070"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Photometer" number="SYS_0040" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system shall include a single photometer placed at the entrance of the tunnel.  The photometer will measure light intensity and provide this data to the lighting control unit.  Typically, such a meter will employ a light receptor filtered to provide a spectral response close to that of the average human eye. Its reaction to changes in light levels is virtually instantaneous.  The light receptor is used to measure average luminance (brightness) within an acceptance angle subtending 20º over a measurement range of 0-6500 cd/m2</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Input System Component"/>
        <CustomAttribute name="Section" value="External Interface"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Starting display software" number="HLR_0010" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Upon execution of the Tunnel lighting system software, the software shall read the Tunnel.ini file and query the user for an input.  Configuration files will provide the appropriate data for the example configuration of the system, as described in the document Tunnel Lighting Control System Overview.</Body>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value=""/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Set Lighting Output Demand Calculation&#9;" number="HLR_0150" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lighting demand shall be calculated for each luminaire set</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Exit sign battery drain&#9;" number="HLR_0210" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The system shall provide data to summarize emergency battery drain imposed by each individual siren &amp; exit sign, and by all such provision in the system as a whole</Body>
        <Parent number="SYS_0080"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Photometer input interface&#9;" number="LLR_0280" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Photometer inputs shall be read in either via hardware or display input with input ranges between</Body>
        <Parent number="HLR_0020"/>
        <Parent number="HLR_0237"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Set Days Between Cleaning&#9;" number="LLR_0410" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Days between cleaning shall be returned upon query</Body>
        <Parent number="HLR_0110"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Sint_32 TunnelData::SystemData::GetDaysBetweenCleaning();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Lamp output units&#9;" number="SYS_0110" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The output from each lamp shall specified via a Digital Addressable Ballast (DAB) unit</Body>
        <CustomAttribute name="Safety" value="False"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="Algorithms"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Lamp Type Initialisation&#9;" number="LLR_0230" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The lamptype class shall be initialised with its maximum power consumption as well as the maximum and minimum output percentages</Body>
        <Parent number="HLR_0180"/>
        <Parent number="HLR_0190"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Lamptype.cpp" procedure_ds="void TunnelData::LampType::InitialiseLampType(const Float_64 HighestPercentOutput, const Float_64 LowestPercentOutput, const Sint_32 MaximumPower);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Failed Lamp Output Handling&#9;" number="HLR_0230" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Commands shall be sent to each individual lamp to achieve appropriate output</Body>
        <Parent number="SYS_0030"/>
        <Parent number="SYS_0060"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Input options power failure&#9;" number="HLR_0070" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to invoke all power states</Body>
        <Parent number="SYS_0060"/>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Mounting Area Number of Lamps&#9;" number="LLR_0320" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The MountArea class shall provide the number of lamps which will fit within its mounting area</Body>
        <Parent number="HLR_0350"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Mountings.cpp" procedure_ds="int TunnelData::MountingArea::NumLamps(TunnelData::LampAttributes MyLamp);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Zone assign emergency cell output&#9;" number="LLR_0530" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall assign the emergency cell output levels to conserve emergency power supplies</Body>
        <Parent number="HLR_0210"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Zone assign powered cells&#9;" number="LLR_0520" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall assign the cell output in lumen units taking into account the distance of the cell from the beginning of the zone</Body>
        <Parent number="HLR_0130"/>
        <Parent number="HLR_0140"/>
        <CustomAttribute name="Safe" value="a"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp on condition&#9;" number="HLR_0235" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>No lamp shall be turned on unless demand dictates to minimize efficiency overhead and unnecessary toggling</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Output Calculation&#9;" number="SYS_0030" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel Lighting system shall manage output calculation in tiers so that lamps, cells, zones, and the tunnel can be controlled with the necessary granularity</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="Algorithms"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options days since cleaning nominal&#9;" number="LLR_0286" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to set the number of days since cleaning between 0 and 182 days</Body>
        <Parent number="HLR_0050"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Photometer signal conversion&#9;" number="HLR_0237" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Photometer measurements shall be converted into an output signal of 4-20m/A (directly proportional to the luminance measurement (i.e. 4.0 m/A being given as zero luminance and 20 m/A as 6,500 cd/m2) for signal transmission to the Lighting Control Unit</Body>
        <Parent number="SYS_0040"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Initialisation and configuration&#9;" number="SYS_0020" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel Lighting system shall be configurable via an external file and take into account tunnel dimensions, zones, spacing for signs ,and efficiency factor</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Configuration"/>
        <CustomAttribute name="Section" value="States and Modes"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp Selection&#9;" number="HLR_0160" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>For a particular set, lamps required for inclusion in satisfying current demand levels shall be selected, with efficiency a contributory factor</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value=""/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Input options days since cleaning nominal&#9;" number="HLR_0050" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to set the number of days since cleaning</Body>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="False"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Lamp Power Required&#9;" number="LLR_0360" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>For each lamp type power required shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Sint_32 TunnelData::SystemData::GetLampPowerRequired(const LampTypeID ThisLampTypeID, const Float_64 LumensRequired);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options days since cleaning out of bounds&#9;" number="LLR_0287" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>If a number of days since cleaning is entered less than zero or greater 182, the software shall prompt for input again</Body>
        <Parent number="HLR_0030"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Cleanliness efficiency factor&#9;" number="HLR_0115" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A cleanliness efficiency factor shall be applied on a range from 1 (immediately after cleaning) to 0 (when dirt blanks out all luminaire output)</Body>
        <Parent number="SYS_0050"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Tunnel Lighting Configuration&#9;" number="HLR_0200" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Configuration facilities shall be provided to facilitate the automatic calculation of the number of lamps which may be positioned in a particular tunnel ceiling area</Body>
        <Parent number="SYS_0130"/>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Input options exit&#9;" number="LLR_0284" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall offer the user an input option to exit the application from the user input display using the letter 'q' for quit</Body>
        <Parent number="HLR_0040"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Main.cpp" procedure_ds="Sint_32 main();"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Cell Configuration and output&#9;" number="HLR_0360" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Cells output shall be computed based on demand for a given area</Body>
        <Parent number="SYS_0030"/>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Calculate cell output &#9;" number="LLR_0050" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Cell output shall be calculated as the number of lumens demanded per metre multiplied by the cell spacing</Body>
        <Parent number="HLR_0360"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="Float_64 TunnelData::Cell::CalculateCellOutput(Float_64 LumensDemandPerMetre, Float_64 CellSpacing);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Zone soiling power compensation&#9;" number="LLR_0510" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall increase the power to the lamps to compensate for lumen output reductions due to lamp soiling</Body>
        <Parent number="HLR_0130"/>
        <Parent number="HLR_0140"/>
        <CustomAttribute name="Safe" value="a"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Display&#9;" number="SYS_0010" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel Lighting system shall provide an human machine interface for emulation of input and examination of output data</Body>
        <CustomAttribute name="Safety" value="False"/>
        <CustomAttribute name="Category" value="HMI"/>
        <CustomAttribute name="Section" value="External Interface"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Large lamp use&#9;" number="HLR_0236" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Larger lamps shall be used to establish the minimum lighting level demanded of any particular set, with a combination of large and small lamps used to respond to fluctuations</Body>
        <Parent number="SYS_0120"/>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Lamp Lighting Output Demand Calculation&#9;" number="HLR_0170" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Lighting demand shall be calculated for each individual lamp</Body>
        <Parent number="SYS_0030"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Input options exit&#9;" number="HLR_0040" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The software shall allow the user to exit the application</Body>
        <Parent number="SYS_0010"/>
        <CustomAttribute name="Safety" value="False"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="System Level Requirements" type="System" name="Cleanliness factor&#9;" number="SYS_0050" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The Tunnel lighting system shall measure efficiency of lamps based on the number of days since cleaning the lamps</Body>
        <CustomAttribute name="Safety" value="True"/>
        <CustomAttribute name="Category" value="Calculation"/>
        <CustomAttribute name="Section" value="States and Modes"/>
        <Tag name="System Requirements"/>
    </Requirement>
    <Requirement group="High Level Requirements" type="High Level" name="Luminary configuration" number="HLR_0215" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Luminaries shall be grouped in sets of one, two, or three depending on where they lie in the tunnel.  Lamps within a set can be used in any combination to assist in the optimisation process, which means that the control system need have no concept of the discrete luminaires themselves, only of the sets to which they belong.  Luminary grouping will be described in the configuration file</Body>
        <Parent number="SYS_0020"/>
        <CustomAttribute name="Safety" value="True"/>
        <Tag name="High Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Get Lamp Model Duo&#9;" number="LLR_0060" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>A Duo lamp model shall be applied if a lamp must be fitted by an exit sign and a siren</Body>
        <Parent number="HLR_0160"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Cell.cpp" procedure_ds="TunnelData::model TunnelData::Cell::GetLampModel(const Sint_32 ThisLamp);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Zone Calculate output coefficients&#9;" number="LLR_0500" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>The zone class shall determine the formula coefficients needed to determine the outputs in units of lumens/meter for a specific demand percentage</Body>
        <Parent number="HLR_0130"/>
        <Parent number="HLR_0140"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="System Data Query Get Lamp Maximum Lumens&#9;" number="LLR_0370" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>For each lamp type maximum lamp lumens shall be returned upon query</Body>
        <Parent number="HLR_0210"/>
        <Map set="Cpp_tunnel_lighting_system" source_file="Source_Code\Systemdata.cpp" procedure_ds="Float_64 TunnelData::SystemData::GetLampMaximumLumens(const LampTypeID ThisLampTypeID);"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Requirement group="Low Level Requirements" type="Low Level" name="Adjust Tunnel Lighting&#9;" number="LLR_0450" document="..\Requirements">
        <AssignedTo first="Jane" last="Wilson"/>
        <Body>Depending on a power failure condition, lighting shall be adjusted according to powered lighting or emergency lighting</Body>
        <Parent number="HLR_0125"/>
        <Tag name="Low Level Requirements"/>
    </Requirement>
    <Document path="Documents\Requirements\Lighting_controller_SW_HLRs.xlsx">
        <Tag name="Requirement Document"/>
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:Group" value="High Level Requirements"/>
            <DocumentFormatSetting name="Sheet1ExcelSheetRange" value="2,35"/>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:ReqType" value="High Level"/>
        </DocumentFormatSettings>
        <StyleFormat style="Sheet1: A" format="$(ReqNumber)" vars="(ReqNumber=.+)" split="," key="y"/>
        <StyleFormat style="Sheet1: B" format="$(ReqName)" vars="(ReqName=.+)" split="," key="n"/>
        <StyleFormat style="Sheet1: C" format="$(ReqBody)" vars="(ReqBody=.+)" split="," key="n"/>
        <StyleFormat style="Sheet1: D" format="$(RefReq)" vars="(RefReq=.+)" split="," key="n"/>
    </Document>
    <Document path="tcf_storage\Datain.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="tcf_storage\Lamp.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="Documents\Requirements\Lighting_controller_SW_LLRs.xlsx">
        <Tag name="Requirement Document"/>
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="Sheet1ExcelSheetRange" value="2,59"/>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:ReqType" value="Low Level"/>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:Group" value="Low Level Requirements"/>
        </DocumentFormatSettings>
        <StyleFormat style="Sheet1: A" format="$(ReqNumber)" vars="(ReqNumber=.+)" split="," key="y"/>
        <StyleFormat style="Sheet1: B" format="$(ReqName)" vars="(ReqName=.+)" split="," key="n"/>
        <StyleFormat style="Sheet1: C" format="$(ReqBody)" vars="(ReqBody=.+)" split="," key="n"/>
        <StyleFormat style="Sheet1: D" format="$(RefReq)" vars="(RefReq=.+)" split="," key="n"/>
    </Document>
    <Document path="Documents\Requirements\Lighting_controller_SYS_Reqs.xlsx">
        <Tag name="Requirement Document"/>
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="Sheet1ExcelSheetRange" value="2,14"/>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:ReqType" value="System"/>
            <DocumentFormatSetting name="DefaultValue:Sheet1:_:Group" value="System Level Requirements"/>
        </DocumentFormatSettings>
        <StyleFormat style="Sheet1: A" format="$(ReqNumber)" vars="(ReqNumber=.+)" split="," key="y"/>
        <StyleFormat style="Sheet1: B" format="$(ReqName)" vars="(ReqName=.+)" split="," key="n"/>
        <StyleFormat style="Sheet1: C" format="$(ReqBody)" vars="(ReqBody=.+)" split="," key="n"/>
    </Document>
    <Document path="Documents\Requirements\Lighting_controller_system_requirements.docx">
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="DefaultValue:ReqType" value="System"/>
            <DocumentFormatSetting name="DefaultValue:Group" value="System Level Requirements"/>
        </DocumentFormatSettings>
        <RegexFormat rule="Rule 1" regex="$(ReqNumber):\s+$(ReqName)" vars="$(ReqName)~.+||$(ReqNumber)~.+||" styles="Requirement_ID" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
        <RegexFormat rule="Rule 2" regex="$(ReqBody)" vars="$(ReqBody)~.+||" styles="Requirement_Text" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
    </Document>
    <Document path="Documents\Test_Documents\High_Level_Tests.xlsx">
        <DocumentFormat contentType="TestCases"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="High_Level_TestsExcelSheetRange" value="2,36"/>
            <DocumentFormatSetting name="DefaultValue:High_Level_Tests:_:Group" value="High Level Tests"/>
        </DocumentFormatSettings>
        <StyleFormat style="High_Level_Tests: A" format="$(TciNumber)" vars="(TciNumber=.+)" split="," key="y"/>
        <StyleFormat style="High_Level_Tests: B" format="$(TciDesc)" vars="(TciDesc=.+)" split="," key="n"/>
        <StyleFormat style="High_Level_Tests: I" format="$(TciType)" vars="(TciType=.+)" split="," key="n"/>
        <StyleFormat style="High_Level_Tests: N" format="(?:\(\d+\)\s+)?$(TciParent)" vars="(TciParent=.+)" split="," key="n"/>
        <StyleFormat style="High_Level_Tests: C" format="$(Test Inputs)" vars="(Test Inputs=.+)" split="," key="n"/>
        <StyleFormat style="High_Level_Tests: D" format="$(Expected Results)" vars="(Expected Results=.+)" split="," key="n"/>
        <StyleFormat style="High_Level_Tests: E" format="$(Notes on Test Strategy)" vars="(Notes on Test Strategy=.+)" split="," key="n"/>
    </Document>
    <Document path="Documents\Test_Documents\Low_Level_Tests.xlsx">
        <DocumentFormat contentType="TestCases"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="Low_Level_TestsExcelSheetRange" value="2,48"/>
            <DocumentFormatSetting name="DefaultValue:Low_Level_Tests:_:Group" value="Low Level Tests"/>
        </DocumentFormatSettings>
        <StyleFormat style="Low_Level_Tests: C" format="$(Low Level Tests)" vars="(Low Level Tests=.+)" split="," key="n"/>
        <StyleFormat style="Low_Level_Tests: D" format="$(Low Level Tests)" vars="(Low Level Tests=.+)" split="," key="n"/>
        <StyleFormat style="Low_Level_Tests: E" format="$(Low Level Tests)" vars="(Low Level Tests=.+)" split="," key="n"/>
        <StyleFormat style="Low_Level_Tests: A" format="$(TciNumber)" vars="(TciNumber=.+)" split="," key="y"/>
        <StyleFormat style="Low_Level_Tests: B" format="$(TciDesc)" vars="(TciDesc=.+)" split="," key="n"/>
        <StyleFormat style="Low_Level_Tests: I" format="$(TciType)" vars="(TciType=.+)" split="," key="n"/>
        <StyleFormat style="Low_Level_Tests: O" format="(?:\(\d+\)\s+)?$(TciParent)" vars="(TciParent=.+)" split="," key="n"/>
    </Document>
    <Document path="Documents\Requirements\Lighting_controller_software_requirements.docx">
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="DefaultValue:Group" value="High Level Requirements"/>
            <DocumentFormatSetting name="DefaultValue:ReqType" value="High Level"/>
        </DocumentFormatSettings>
        <RegexFormat rule="Rule 1" regex="$(ReqNumber):\s+$(ReqName)" vars="$(ReqName)~.+||$(ReqNumber)~.+||" styles="Requirement_ID" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
        <RegexFormat rule="Rule 2" regex="$(ReqBody)" vars="$(ReqBody)~.+||" styles="Requirement_Text" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
        <RegexFormat rule="Rule 3" regex="$(RefReq)" vars="$(RefReq)~.+||" styles="Traceability Data" refregex="[A-Z]+_\d+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
    </Document>
    <Document path="Documents\Requirements\Lighting_controller_software_detailed_design.docx">
        <DocumentFormat contentType="Requirements"/>
        <DocumentFormatSettings>
            <DocumentFormatSetting name="DefaultValue:Group" value="Low Level Requirements"/>
            <DocumentFormatSetting name="DefaultValue:ReqType" value="Low Level"/>
        </DocumentFormatSettings>
        <RegexFormat rule="Rule 1" regex="$(ReqNumber):\s+$(ReqName)" vars="$(ReqName)~.+||$(ReqNumber)~.+||" styles="Requirement_ID" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
        <RegexFormat rule="Rule 2" regex="$(ReqBody)" vars="$(ReqBody)~.+||" styles="Requirement_Text" refregex=".+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
        <RegexFormat rule="Rule 3" regex="$(RefReq)" vars="$(RefReq)~.+||" styles="Traceability Data" refregex="[A-Z]+_\d+" eolf="" ws="y" min="n" cs="y" slm="n" res="n" imf="n" sps="n" tblnum="" itblnum="n" tblrow="" itblrow="n" tblcol="" itblcol="n"/>
    </Document>
    <Document path="Source_Code\Cpp_tunnel_lighting_system.tcf"/>
    <Document path="tcf_storage\Cell.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="tcf_storage\System_Data.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="tcf_storage\Mountings.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="tcf_storage\main.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <Document path="tcf_storage\Lamptype.tcf">
        <Tag name="Low Level Test TCF Files"/>
    </Document>
    <TestCase group="High Level Tests" number="TCI_0050" type="External Task" program="RunTest5">
        <Description>After setting the number of days since cleaning the tunnel software shall return to the HMI initial selection screen
</Description>
        <Parent requirement="HLR_0050"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of HMI inputs to invoke various inputs for number of days since cleaning&#10;2)  Output results from nominal photometer inputs showing effects of days since cleaning inputs to confirm that days since cleaning is being factored for output calculation"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2, 0; 2, 91, 2, 182).  Verified output file and compare with sequence or subset of sequence above.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2, 0; 2, 91, 2, 182).  Verified output file and compare with sequence or subset of sequence above."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Days since cleaning input data set&#10;&#10;Purpose&#9;&#9;&#9;:  To verify the tunnel lighting software can correctly process nominal range values for days since cleaning&#10;&#10;Description&#9;&#9;&#9;:  Integer data set (0,1, 50, 90, 91, 181, 182)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  Can be entered only after the &quot;&quot;set days since cleaning selection&quot;&quot; is made from the HMI&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;Min/reasonable values&#9;&#9;: (0 - 182)&#10;Nominal, robustness, worst case inputs&#9;: (-1, 0, 182, 183, 99999)&#10;Invalid data types&#9;&#9;: real, non numerical&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0020" type="External Task" program="RunTest2">
        <Description>Generated lamp output data will indicate that the tunnel lighting software has accepted the photometer input value as one in the acceptable range (4-20 mA)
</Description>
        <Parent requirement="HLR_0020"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Output from nominal range inputs from photometer&#10;2)  Record of nominal range inputs"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="2)  Verify data output for 4 mAmps Photometer input&#10;3)  Verify that something is output aside from querying user to enter again or Tunnel shutting down.  Do nominal range values such as 4, 4.5, 19.5 and 20&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Verify data output for 4 mAmps Photometer input&#10;3)  Verify that something is output aside from querying user to enter again or Tunnel shutting down.  Do nominal range values such as 4, 4.5, 19.5 and 20&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;  &#9;&#9;:  Nominal Photometer input data set&#10;&#10;Purpose&#9;  &#9;&#9;:  Ensure that the HMI accepts nominal photometer range values as inputs&#10;&#10;Description&#9;  &#9;&#9;: Range values from 4-20 mAmps must be accepted by the HMI valid inputs&#10;&#10;Simulated (Y/N) &#9;&#9;:  Y&#10;&#10;Time/Event sequence&#9;&#9;:  This input must be provided once a Tunnel is powered up in nominal power up mode&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  Acceptable range values from 4.0 to 20.0 mA&#10;&#10;Nominal, robustness, worst case inputs&#9;:   4.0 to 20.0 mA nominal; high number of decimals, negative values, range invalid data types:  Inputs less than 4.0 mAmps and greater than 20.0 mA"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Category of test" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0250" type="External Task" program="RunTest11">
        <Description>The Tunnel software output produced to drive maximum lm/W levels will generate output levels no greater than 120 lm/w
</Description>
        <Parent requirement="HLR_0231"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recording HMI inputs to drive maximum output of lamps&#10;&#10;2)  Resulting output data showing maximum output&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output;  Verify Lumens value (ADD) based on  120lm/W is the maximum Lumens value &quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output;  Verify Lumens value (ADD) based on  120lm/W is the maximum Lumens value &quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be .... (see above)&#10;&#10;Mmin/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0260" type="External Task" program="RunTest11">
        <Description>The Tunnel software output produced will verify linear calculation of lamp output from 120 lm/W to 60 lm/W
</Description>
        <Parent requirement="HLR_0232"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to induce maximum output from lamps&#10;&#10;2)  Resulting output data from HMI inputs that induce maximum output values for lamps&#10;&#10;3)  Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output;  Verify deterioration of lumen value from  120 lm/W output at maximum output, down to 0.2 x 120 / 0.4 = 60 lm/W at 20% output&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output;  Verify deterioration of lumen value from  120 lm/W output at maximum output, down to 0.2 x 120 / 0.4 = 60 lm/W at 20% output&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a &#10;controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0270" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced  for a range of inputs will demonstrate that lamps are turned off when a minimum percentage of maximum output levels are reached
</Description>
        <Parent requirement="HLR_0233"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to drive some lamp output states below minimum threshold&#10;&#10;2)  Resulting output data that demonstrates lamps being turned of as a result of output being below the minimum percentage&#10;&#10;3)  Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.ini are not being used&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.ini are not being used&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0280" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced  for a range of inputs will demonstrate that lamps are turned off when a minimum percentage of maximum output levels are reached
</Description>
        <Parent requirement="HLR_0234"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to drive some lamp output states below minimum threshold&#10;&#10;2)  Resulting output data that demonstrates lamps being turned of as a result of output being below the minimum percentage&#10;&#10;2) Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.in are in being switched off&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.in are in being switched off&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0290" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced  for a range of inputs will demonstrate that lamps are turned off when a minimum percentage of maximum output levels are reached
</Description>
        <Parent requirement="HLR_0235"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to drive some lamp output states to be turned off for efficiency&#10;&#10;2)  Resulting output data that demonstrates lamps being turned off due only to efficiency or minimum percentage thresholds&#10;&#10;2) Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.in are in being switched of.  Verify that when lamps are receiving output above this threshold in normal power conditions, all lamps are on&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;&#10;2)  Sequence (1, 4);  Store the output;  Verify that lamps receiving output values less than the minimum percentage of their maximum output as described in the Tunnel.in are in being switched of.  Verify that when lamps are receiving output above this threshold in normal power conditions, all lamps are on&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0300" type="External Task" program="RunTest12">
        <Description>The Tunnel software output produced  for a range of inputs will demonstrate that larger lamps are utilized initially and smaller lamps are added as increased power is needed.    As photometer inputs range from 4-20 mAmps, output data will show larger lamps being turned on in various zones first and then smaller lamps being turned on as needed.  When the range inputs are starting a higher number and decrementing, smaller lamps will turn off as their additional capacity isn't needed.  Actual output to be compared to expected output data file
</Description>
        <Parent requirement="HLR_0236"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to drive some larger lamps to be turned on and smaller lamps to be turned off&#10;&#10;2)  Resulting output data that confirms large lamp usage over small lamps under certain demand conditions&#10;&#10;2) Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;3)  Sequence is (1,4);   Store the output;  Sequence (1,20); Verify that large lamps in each set are achieving the minimum thresholds and then as cell demand escalates, smaller lamps are turned on as necessary&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Utilize Tunnel.ini configured to enable lamps to be extinguished with nominal photometer input ranges&#10;3)  Sequence is (1,4);   Store the output;  Sequence (1,20); Verify that large lamps in each set are achieving the minimum thresholds and then as cell demand escalates, smaller lamps are turned on as necessary&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Category of test" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0310" type="External Task" program="RunTest12">
        <Description>The Tunnel software output produced will demonstrate photometer inputs ranging from 4-20 mAmps produce expected outputs determined by comparison with expected output files.  From this 4 mAmps being considered zero luminance and 20 mAmps as 6,500 cd/m2 is to be inferred
</Description>
        <Parent requirement="HLR_0237"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Recorded HMI inputs to drive full range of nominal photometer inputs&#10;&#10;2)  Resulting output data capture of resulting luminance from full range of photometer inputs&#10;&#10;2) Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Sequence (1,20); Verify that for given photometer inputs and knows algorithms for calculations for outputs, the photometer signal is converted correctly&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Sequence (1,20); Verify that for given photometer inputs and knows algorithms for calculations for outputs, the photometer signal is converted correctly&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Input Calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5110" type="Low Level Test" tcf="Cell.tcf">
        <Description>Verify that the Cell::Cell is correctly instantiated</Description>
        <Parent requirement="LLR_0010"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="None"/>
        <CustomAttribute name="Expected Results" value="mLampTypeCount[0..1]=0&#10;mLampTypeMinLumens[0..1]=0&#10;mLampTypeMaxLumens[0..1]=0.0&#10;mLuminaireSetSize=0&#10;mUniqueCellID=0&#10;mThisLamp[0..11].mLampModel=TunnelData::LightSolo&#10;mThisLamp[0..11].mUniqueLampID=0&#10;mThisLamp[0..11].mThisLampTypeID=Brightest &#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Assumptions and constraints" value=""/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Cell.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0320" type="External Task" program="RunTest12">
        <Description>The Tunnel software output  produced from photometer inputs, given a set of input configuration files, verified against expected output files will verify that data management capabilities of the software are being met
</Description>
        <Parent requirement="HLR_0340"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Configuration data files (Tunnel.ini)&#10;2)  Resulting output data capture from nominal photometer inputs assuring configuration data is being properly managed to instantiate and service varying tunnel parameters&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2) Verify Tunnel.ini is populated with nominal tunnel configuration&#10;3)  Sequence is (1,4);   Store the output;  Sequence (1,20); Store the output;  Verify nominal input ranges for a given Tunnel.ini file are generating output streams that match expected output data.   This confirms that configuration files are being read, the database is being updated, output is being calculated, and output data is being correctly generated&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2) Verify Tunnel.ini is populated with nominal tunnel configuration&#10;3)  Sequence is (1,4);   Store the output;  Sequence (1,20); Store the output;  Verify nominal input ranges for a given Tunnel.ini file are generating output streams that match expected output data.   This confirms that configuration files are being read, the database is being updated, output is being calculated, and output data is being correctly generated&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Data Management"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5080" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Name: Soiling factor calculation for dirty

Description: Verify that soiling factor is calculated correctly per formula described in LLR_0355 in cases where the lamp is not clear 
</Description>
        <Parent requirement="LLR_0350"/>
        <Parent requirement="LLR_0360"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="Soiling factor calculation for dirty"/>
        <CustomAttribute name="Test Inputs" value="Inputs:&#10;mDaysSinceClearning= 0&#10;mDaysBetweenCleaning= 182&#10;SoiledEfficiency= 50"/>
        <CustomAttribute name="Expected Results" value="Expected Output: &#10;SoilingFactor =1.0"/>
        <CustomAttribute name="Test Case Review Notes" value="Boundary value populated in nominal range"/>
        <CustomAttribute name="Safety Level" value="b"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0340" type="External Task" program="RunTest11">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for cell output.  Expected output files will be compared against this output to ensure that cell output is being computed correctly
</Description>
        <Parent requirement="HLR_0350"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Resulting output data from nominal photometer input showing cell output computed for a given demand area&#10;2)  Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output; Sequence(1,4); store output;  Verify that Cell demand is met but total output of lumens for all lamps in the cell &quot;&#10;'"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,20);   Store the output; Sequence(1,4); store output;  Verify that Cell demand is met but total output of lumens for all lamps in the cell &quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file)&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0330" type="External Task" program="RunTest13">
        <Description>The Tunnel software output  produced from photometer inputs, given a set of input configuration files, will show lamps per mounting are being correctly calculated.  Expected output results files will be compared against the produced output
</Description>
        <Parent requirement="HLR_0360"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Configuration data files (Tunnel.ini)&#10;2)  Resulting output data capture from nominal photometer inputs assuring lamps per mounting are being computed correctly&#10;3)  Confirmation of expected output based on analysis of the recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2) Verify Tunnel.ini is populated with nominal tunnel configuration&#10;3)  Sequence is (1,20);   Store the output;  Verify that the total number of cells and lamps per cell match expected values given Tunnel.ini&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2) Verify Tunnel.ini is populated with nominal tunnel configuration&#10;3)  Sequence is (1,20);   Store the output;  Verify that the total number of cells and lamps per cell match expected values given Tunnel.ini&quot;&#10;"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Standard test Tunnel.ini file set&#10;&#10;Purpose&#9;&#9;&#9;:  Initialise typical parameter tunnel lighting system&#10;&#10;Description&#9;&#9;&#9;:  The Tunnel.ini file describes standard Tunnel dimension parameters, zone layout data, lamp thresholds, and &#10;spacing&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  The Tunnel.ini file must be available in the same directory as the Tunnel lighting system application at the time of  launch&#10;&#10;Input Data Control&#9;&#9;:  The Standard Tunnel.ini default values are verified by review process as nominal range values for a typically deployed Tunnel lighting system.  Contained in the set are incomplete files, and extreme value inputs, and finally a case where the ini file is non-existent&#10;&#10;Min/reasonable values&#9;&#9;:  values for Tunnel width, zone spacing, lamp spacing, and lamp thresholds, span reasonable ranges&#10;&#10;Nominal, robustness, worst case inputs&#9;:   Standard file, incomplete file, extreme value file, non-existent file&#10;&#10;Invalid data types&#9;&#9;: non-existent file, incomplete ini file&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Configuration"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0345" type="External Task" program="RunTest4">
        <Description>Text case data needs to be updated </Description>
        <Parent requirement="LLR_0284"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0030" type="External Task" program="RunTest3">
        <Description>For HMI selection, photometer input, days since cleaning inputs, if out of bounds inputs are entered, this shall result in the re-query for input data
</Description>
        <Parent requirement="HLR_0030"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of out of bound inputs&#10;2)  HMI output when out of bounds inputs are entered for the photometer"/>
        <CustomAttribute name="Criteria for evaluating results" value="Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:"/>
        <CustomAttribute name="Test Procedure Outline" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Verify out of bounds data (0, 1, 3.9, 20.1, 100)"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Verify out of bounds data (0, 1, 3.9, 20.1, 100)"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  HMI out of bound values&#10;&#10;Purpose&#9;&#9;&#9;:  Ensure that the HMI can handle out of bound values and continue operation&#10;&#10;Description&#9;&#9;&#9;:  Integer inputs not offered for initial selection menu selection (-1, 4, 1000); real number inputs for photometer inputs (3.9, -1000.0, 20.1, &#9;99999.9); Days since cleaning (-.1, -9999.99, 182.1, 10000); &#10;&#10;Simulated (Y/N)&#9;&#9;:  Y&#10;&#10;Time/Event sequence&#9;&#9;:  After initial startup of tunnel, after photometer input is selected, after days since cleaning is selected&#10;Input Data Control&#9;&#9;:   Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;Min/reasonable values&#9;&#9;:  Initial selection menu selection (-1, 4); real number inputs for photometer inputs (3.9, 20.1); Days since &#9;&#9;&#9;&#9;   cleaning (-.1 182.1); &#10;Nominal, robustness, worst case inputs&#9;:  Photometer inputs (-1000.0, 99999.9); Days since cleaning (-9999.99, 10000); &#10;Invalid data types&#9;&#9;: Initial selection menus anything aside from (0,1, 2, 3); photometer input - real numbers out side of 4.0 -  20.0, non numerical entries; Set days since cleaning: integers less than 0 or greater than 182, real numbers, non numerical numbers;  Toggle power failure status: anything aside from the integer '3'"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0140" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each zone
</Description>
        <Parent requirement="HLR_0140"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Read Zone data from Tunnel.ini;  Verify all lamps in each zone have power settings.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Read Zone data from Tunnel.ini;  Verify all lamps in each zone have power settings."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5120" type="Low Level Test" tcf="Cell.tcf">
        <Description>Verify that a given is instantiated and initialised correctly</Description>
        <Parent requirement="LLR_0020"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="LuminaireSetSize=0&#10;pLampTypeIDs=(Dynamically Allocated variable) ldra_qq_lv_3&#10;UniqueCellID=0&#10;pLampTypeIDs[0..4]=Brightest&#9;&#9;&#10;mLampTypeCount[0..1]=0,1&#10;mLampTypeID[0..11]=Brightest&#10;mThisLamp[0..11].mLampModel&#9;=TunnelData::LightSolo&#10;mThisLamp[0..11].mThisLampTypeID=Brightest&#10;mThisLamp[0.11].mUniqueLampID=0&#10;"/>
        <CustomAttribute name="Expected Results" value="mLampTypeCount[0..1]=0&#10;mLampTypeID[0..11]=Brightest&#10;mLampTypeMaxLumens[0..1]=0.0&#10;mLampTypeMinLumens[0..1]=0.0&#10;mLuminaireSetSize=0&#10;mUniqueCellID=0&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Cell.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5130" type="Low Level Test" tcf="Cell.tcf">
        <Description>Verify that powered output settings is  assigned consistently  for any given size of a lamp</Description>
        <Parent requirement="LLR_0040"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="LumensDemandPerMetre=5000&#9;&#10;CellSpacing=20&#9;&#10;mLuminaireSetSize=3&#9;&#10;mLampTypeMinLumens[0..1]=2000&#9;&#10;mLampTypeCount[0..1]=5,10&#10;mLampTypeMaxLumens[0..1]=6000,4000&#10;"/>
        <CustomAttribute name="Expected Results" value="Stub Function Hit count&#10;TunnelData::Lamp::SetLumensOutput=12&#10;&#9;&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Cell.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5140" type="Low Level Test" tcf="Cell.tcf">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0050"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="LumensDemandPerMetre=5000&#10;CellSpacing=20&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Return Value=1.00E+05&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Cell.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0060" type="External Task" program="RunTest6">
        <Description>After setting the power failure state, the tunnel software shall display lamp output data for power failure conditions.  This output file shall be compared to the reviewed output file for this state for the given Tunnel.ini configuration file.  There will be no differences

</Description>
        <Parent requirement="HLR_0070"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Record of HMI inputs to invoke all power states&#10;2)  Resulting outputs for power failure and powered states&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1, 4; 3, 1, 4, 3).&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1, 4; 3, 1, 4, 3)."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Set and return from power failure&#10;&#10;Purpose&#9;&#9;&#9;:  To verify the tunnel software can change states from standard power operation to power failure mode from HMI inputs&#10;&#10;Description&#9;&#9;&#9;: Input sequence (1, 4, 3, 3, 1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  Initial HMI selection menu screen before execution of the sequence of input data&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;: 3, 3&#10;&#10;Nominal, robustness, worst case inputs&#9;: Repeat various Photometer mAmps inputs before changing power state (1,4, 1, 20, 1,9999, 3, 3, 3, 3, 99999, 1, 4)&#10;&#10;Invalid data types&#9;&#9;:  refer to invalid ranges for photometer.  Toggle Power failure - Anything aside from '3'&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0010" type="External Task" program="RunTest1">
        <Description>Given the configuration file data set, the output of nominal photometer input will reflect that configuration file data such as Tunnel width, zone layout, and other data has been correctly processed.  To verify this has been done accurately, expected results output files will be constructed and reviewed for accuracy.  The test inputs will be applied and the resulting output will be compared against the expected output files.
</Description>
        <Parent requirement="HLR_0010"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Configuration data file&#10;2)  Output from nominal range inputs from photometer&#10;3)  Output from power failure invocation&#10;4)  Output from boundary conditions of days since cleaning"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="2)  Verify data output for 4 mAmps Photometer input&#10;3)  Have &quot;&quot;good&quot;&quot; output file as expected and compare with actual&#10;4)  If Tunnel.ini not found for instance .. Fails&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel&#10;&#10;2)  Verify data output for 4 mAmps Photometer input&#10;&#10;3)  Have &quot;good&quot; output file as expected and compare with actual&#10;&#10;4)  If Tunnel.ini not found for instance .. Fails"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;  &#9;&#9;:  Standard test Tunnel.ini file set&#10;&#10;Purpose&#9; &#9;&#9; :  Initialise typical parameter tunnel lighting system&#10;&#10;Description&#9; &#9;&#9; :  The Tunnel.ini file describes standard Tunnel dimension parameters, zone layout data, lamp thresholds, and spacing&#10;&#10;Simulated (Y/N) &#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  The Tunnel.ini file must be available in the same directory as the Tunnel lighting system application at the time of  launch&#10;&#10;Input Data Control&#9;&#9;:  The Standard Tunnel.ini default values are verified by review process as nominal range values for a typically deployed Tunnel lighting system.  Contained in the set are incomplete files, and extreme value inputs, and finally a case where the ini file is non-existent&#10;&#10;Min/reasonable values&#9;&#9;:  Values for Tunnel width, zone spacing, lamp spacing, and lamp thresholds, span reasonable ranges&#10;&#10;nominal, robustness, worst case inputs&#9;:  Standard file, incomplete file, extreme value file, non-existent file&#10;&#10;Invalid data types: non-existent file, incomplete ini file"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Category of test" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="None"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0230" type="External Task" program="RunTest10">
        <Description>The Tunnel software output when the power failure state is set shall have all lamp output set to the same calculated value.  Given a configuration set of files, the output for power failure must be compared to expected data files
</Description>
        <Parent requirement="HLR_0220"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Recorded HMI inputs to induce power failure&#10;2)   Resulting output data after invoking power failure condition"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (3);  Store the output; verify low power lamps are being used and lumen values matches Tunnel.ini emergency lamp output value&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (3);  Store the output; verify low power lamps are being used and lumen values matches Tunnel.ini emergency lamp output value"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Set and return from power failure&#10;&#10;Purpose&#9;&#9;&#9;:  To verify the tunnel software can change states from standard power operation to power failure mode from HMI inputs&#10;&#10;Description&#9;&#9;&#9;: Input sequence (1, 4, 3, 3, 1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  Initial HMI selection menu screen before execution of the sequence of input data&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;: 3, 3&#10;&#10;Nominal, robustness, worst case inputs&#9;: Repeat various Photometer mAmps inputs before changing power state (1,4, 1, 20, 1,9999, 3, 3, 3, 3, 99999, 1, 4)&#10;&#10;Invalid data types&#9;&#9;:  Refer to invalid ranges for photometer.  Toggle Power failure - Anything aside from '3'&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0150" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each luminaire set
</Description>
        <Parent requirement="HLR_0150"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand is calculated for each set of luminaires&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand is calculated for each set of luminaires"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;: To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5180" type="Low Level Test">
        <Description>Verify that for a given lamp and spacing for exit signs and sirens the correct lamp model is returned</Description>
        <Parent requirement="LLR_0060"/>
        <Parent requirement="LLR_0070"/>
        <Parent requirement="LLR_0080"/>
        <Parent requirement="LLR_0090"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="Stubs:  GetExitSpacing() return value = 75, GetSirenSpacing return value = 50&#9;&#9;&#10;Test Case 1&#9;&#9;&#10;ThisLamp=50&#10;&#9;&#9;&#10;Test Case 2&#9;&#9;&#10;ThisLamp=150&#10;&#9;&#9;&#10;Test Case 3&#9;&#9;&#10;ThisLamp=75&#10;&#9;&#9;&#10;Test Case 4&#9;&#9;&#10;ThisLamp=4&#10;"/>
        <CustomAttribute name="Expected Results" value="Return Value&#9;&#9;&#10;&#9;&#9;&#10;Test Case 1&#9;&#9;&#10;Procedure Return Value =TunnelData::Duo&#10;&#9;&#9;&#10;Test Case 2&#9;&#9;&#10;Procedure Return Value =TunnelData::Announcer&#10;&#9;&#9;&#10;Test Case 3&#9;&#9;&#10;Procedure Return Value =TunnelData::Guide&#10;&#9;&#9;&#10;Test Case 4&#9;&#9;&#10;Procedure Return Value =TunnelData::LightSolo&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value="Four Copies in the TCI Grid"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Text_Attrib" value="this is some text&#10;&#10;This is a new line&#10;&#10;how is a long line rendered .............................................  ..............  ...................  ...........................&#10;&#10;This is yet another line&#10;&#10;"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5190" type="Low Level Test" tcf="Datain.tcf">
        <Description>Verify that TunnelData:DataIn::ReadContent loads .ini file and stores the data in SystemDataArray</Description>
        <Parent requirement="LLR_0100"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Verify that loadcsv returns true"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Notes on Test Strategy" value="If the coverage report indicates that loadcsv returns true and inspection shows that Tunnel.ini is being read then this demonstrates that the I/O necessary for initialisation is being completed"/>
        <CustomAttribute name="Test Inputs" value="Tunnel.ini"/>
        <CustomAttribute name="Expected Results" value="Successful parsing of the Tunnel.ini file"/>
        <CustomAttribute name="Test Case Review Notes" value="It appears that ReadContent isn't being used at all.  Follow //Read content call comments to see if this code should be abstracted away"/>
        <CustomAttribute name="Safety Level" value="a"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="Start in directory of the TBrun harness is in the same location as the Tunnel.ini file to be parsed"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Tunnel.in has not been corrupted.   2)  The correct start in directory is selected for execution of the TBrun harness"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="first review"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Datain.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5200" type="Low Level Test" tcf="Datain.tcf">
        <Description>Verify that tokens are copied into ZoneData are the are parsed from the .ini file</Description>
        <Parent requirement="LLR_0110"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Very that atoi function working correctly and the initialisation array is populated correctly from the INI file"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Notes on Test Strategy" value="If the coverage report indicates that loadcsv returns true and inspection shows that Tunnel.ini is being read then this demonstrates that the I/O necessary for initialisation is being completed"/>
        <CustomAttribute name="Test Inputs" value="Test Case 1&#10;Input: Token=&quot;&quot;, &#10;Count=NumZonePramas, &#10;array=&amp;ldra+qq_lv2 &#10;&#10;Test Case2&#10;&#10; Token=&quot;42&quot;,&#10; Count=0, &#10;array=&amp;ldra+qq_lv2 "/>
        <CustomAttribute name="Expected Results" value="Test Case 1&#10;Token=&quot;&quot;&#10;&#10;&#10;Test Case 2&#10; Token=&quot;42&quot;,"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Text_Attrib" value="Input Parameters&#9;&#9;&#10;Name&#9;Type&#9;Value&#10;LuminaireSetSize&#9;Sint_32&#9;0&#10;pLampTypeIDs&#9;LampTypeID*&#9;ldra_qq_lv_3&#10;UniqueCellID&#9;Sint_32&#9;0&#10;pLampTypeIDs[0]&#9;const LampTypeID&#9;Brightest&#10;pLampTypeIDs[1]&#9;const LampTypeID&#9;Brightest&#10;pLampTypeIDs[2]&#9;const LampTypeID&#9;Brightest&#10;pLampTypeIDs[3]&#9;const LampTypeID&#9;Brightest&#10;pLampTypeIDs[4]&#9;const LampTypeID&#9;Brightest&#10;&#9;&#9;&#10;Input Member Variables&#9;&#9;&#10;Name&#9;Type&#9;Value&#10;mLampTypeCount[0]&#9;Sint_32&#9;0&#10;mLampTypeCount[1]&#9;Sint_32&#9;1&#10;mLampTypeID[0]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[10]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[11]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[1]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[2]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[3]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[4]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[5]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[6]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[7]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[8]&#9;LampTypeID&#9;Brightest&#10;mLampTypeID[9]&#9;LampTypeID&#9;Brightest&#10;mThisLamp[0].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[0].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[0].mUniqueLampID&#9;Sint_32&#9;0&#10;mThisLamp[10].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[10].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[10].mUniqueLampID&#9;Sint_32&#9;12&#10;mThisLamp[11].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[11].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[11].mUniqueLampID&#9;Sint_32&#9;13&#10;mThisLamp[1].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[1].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[1].mUniqueLampID&#9;Sint_32&#9;3&#10;mThisLamp[2].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[2].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[2].mUniqueLampID&#9;Sint_32&#9;4&#10;mThisLamp[3].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[3].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[3].mUniqueLampID&#9;Sint_32&#9;5&#10;mThisLamp[4].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[4].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[4].mUniqueLampID&#9;Sint_32&#9;6&#10;mThisLamp[5].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[5].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[5].mUniqueLampID&#9;Sint_32&#9;7&#10;mThisLamp[6].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[6].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[6].mUniqueLampID&#9;Sint_32&#9;8&#10;mThisLamp[7].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[7].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[7].mUniqueLampID&#9;Sint_32&#9;9&#10;mThisLamp[8].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[8].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[8].mUniqueLampID&#9;Sint_32&#9;10&#10;mThisLamp[9].mLampModel&#9;TunnelData::model&#9;TunnelData::LightSolo&#10;mThisLamp[9].mThisLampTypeID&#9;LampTypeID&#9;Brightest&#10;mThisLamp[9].mUniqueLampID&#9;Sint_32&#9;11"/>
        <CustomAttribute name="Prerequisite Conditions" value="Start in directory of the TBrun harness is in the same location as the Tunnel.ini file to be parsed"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Tunnel.in has not been corrupted.   2)  The correct start in directory is selected for execution of the TBrun harness"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Datain.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5210" type="Low Level Test" tcf="Lamp.tcf">
        <Description>Verify that Lamp::Lamp is called for construction of the Lamp object.  Additionally verify that Lamp::InitialiseLamp is called and correctly initialises the Lamp object
</Description>
        <Parent requirement="LLR_0120"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="ThisLampTypeID=Dimmest&#10;UniqueLampID=2&#10;LampModelID=TunnelData::Duo&#10;"/>
        <CustomAttribute name="Expected Results" value="mThisLampTypeID=Brightest&#10;mUniqueLampID=0&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;&#10;Lamp::InitialiseLamp&#9;&#9;&#10;Output Member Variables&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;&#10;mLampModel=TunnelData::Duo&#10;mUniqueLampID=2&#10;mThisLampTypeID=Dimmest&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Assumptions and constraints" value=""/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamp.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5220" type="Low Level Test" tcf="Lamp.tcf">
        <Description>Verify that Lamp::SetLumensOutput outputs the number of lumens per lamp</Description>
        <Parent requirement="LLR_0130"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="LumensRequired=0&#9;&#9;&#10;mThisLampTypeID=Brightest&#10;"/>
        <CustomAttribute name="Expected Results" value="Stdio is receiving output data for the number of Lumens per lamp"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="Lamp constructor has been invoked previously in the sequence"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamp.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5230" type="Low Level Test">
        <Description>Verify that Lamp::GetMaximumLumens() returns the Maximum lumens allowable for a given lamp when called</Description>
        <Parent requirement="LLR_0140"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Notes on Test Strategy" value=""/>
        <CustomAttribute name="Test Inputs" value="mThisLampTypeID=Brightest&#10;&#9;&#9;&#10;SystemData::GetLampMaximumLumes() &#10;Return Value is set to 5000.00&#9;&#9;&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Return Value=5.00E+03&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="SystemData::GetLampMaximumLumes() is stubbed and the return value is manipulated using TBrun"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5240" type="Low Level Test">
        <Description>Verify that Lamp::GetMinimumLumens() returns the minimum lumens allowable for a given lamp when called</Description>
        <Parent requirement="LLR_0150"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mThisLampTypeID=Brightest&#10;&#9;&#9;&#10;SystemData::GetLampMinimumLumes()&#10;Return Value is set to 1000.00&#9;&#9;&#10;&#9;&#9;&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Return Value=1.00E+03&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="SystemData::GetLampMinimumLumes() is stubbed and the return value is manipulated using TBrun"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5250" type="Low Level Test" tcf="Lamp.tcf">
        <Description>Verify that Lamp::SendPowerToLamp outputs the power setting for a given lamp id</Description>
        <Parent requirement="LLR_0160"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Notes on Test Strategy" value=""/>
        <CustomAttribute name="Test Inputs" value="PowerSetting=4000&#10;mUniqueLampID=5&#10;"/>
        <CustomAttribute name="Expected Results" value="Stdio is receiving output data for power setting for each unique lamp ID"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="SystemData::GetLampMaximumLumes() is stubbed and the return value is manipulated using TBrun"/>
        <CustomAttribute name="Assumptions and constraints" value=""/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamp.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0070" type="External Task" program="RunTest7">
        <Description>The tunnel software output stream will provide the total cell demand and lumens per meter.
</Description>
        <Parent requirement="HLR_0090"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of HMI inputs of entering nominal range photometer inputs&#10;2)  Resulting output data from nominal range photometer inputs&#10;3)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2, 0; 2, 91, 2, 182).  Verified output file and compare with sequence or subset of sequence above.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2, 0; 2, 91, 2, 182).  Verified output file and compare with sequence or subset of sequence above."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5090" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Name:  Soiling factor calculation for dirty
Description:  Verify that soiling factor is calculated correctly per formula described in LLR_0355 in cases where the lamp is not clear 
</Description>
        <Parent requirement="LLR_0350"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="Inputs:&#10;mDaysSinceClearning= 91&#10;mDaysBetweenCleaning= 182&#10;SoiledEfficiency= 50"/>
        <CustomAttribute name="Expected Results" value="&#10;Expected Output: &#10;SoilingFactor =1.5"/>
        <CustomAttribute name="Test Case Review Notes" value="Nominal Value populated"/>
        <CustomAttribute name="Safety Level" value="a"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5260" type="Low Level Test">
        <Description>Verify the instantiation and initialisation the lampattributes class with nominal range values for height, width, and tunndata::model</Description>
        <Parent requirement="LLR_0170"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Notes on Test Strategy" value="Initialise lampattributes class with nominal values"/>
        <CustomAttribute name="Test Inputs" value="h=2&#10;w=2&#10;m=TunnelData::Duo"/>
        <CustomAttribute name="Expected Results" value="ThisModel=TunnelData::Duo&#10;width=2&#10;height=2;"/>
        <CustomAttribute name="Test Case Review Notes" value="Need to add off nominal and boundary tests. "/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5270" type="Low Level Test">
        <Description>Verify that the TunnelData::LampAttributes::Height() member function returns the height as expected for all possible width values</Description>
        <Parent requirement="LLR_0180"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence requiring initialisation of TunnelData::LampAttributes::LampAttributes"/>
        <CustomAttribute name="Notes on Test Strategy" value="Verify that Height is returned correctly"/>
        <CustomAttribute name="Test Inputs" value="height=2"/>
        <CustomAttribute name="Expected Results" value="height=2"/>
        <CustomAttribute name="Test Case Review Notes" value="Just put in 2 for height"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="lampattributes class must be initialised"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0160" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced for photometer inputs will that days since cleaning and resulting efficiency is being correctly factored in deciding which lamps are to be included and which to be excluded. Multiple expected results files must be compared with actual results based on different efficiency levels
</Description>
        <Parent requirement="HLR_0160"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data for nominal photometer input values.  Values will include boundary values for photometer input&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store output 1; Sequence (1,20); Store output 2;  Verify that for each zone, correct lamp types are being powered based on efficiency algorithms.  Higher powered lamps are being utilized first, lamps powered below the minimum threshold are being turned off&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store output 1; Sequence (1,20); Store output 2;  Verify that for each zone, correct lamp types are being powered based on efficiency algorithms.  Higher powered lamps are being utilized first, lamps powered below the minimum threshold are being turned off"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5280" type="Low Level Test">
        <Description>Verify that the TunnelData::LampAttributes::Width() member function returns the width as expected for all possible width values</Description>
        <Parent requirement="LLR_0190"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence requiring initialisation of TunnelData::LampAttributes::LampAttributes"/>
        <CustomAttribute name="Notes on Test Strategy" value="Verify that Width is returned correctly"/>
        <CustomAttribute name="Test Inputs" value="width=2"/>
        <CustomAttribute name="Expected Results" value="width=2"/>
        <CustomAttribute name="Test Case Review Notes" value="Just put in 2 for width"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="lampattributes class must be initialised"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5290" type="Low Level Test">
        <Description>Verify that the TunnelData::LampAttributes::Area() member function returns the product of height and width  of a given lamp</Description>
        <Parent requirement="LLR_0200"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence requiring initialisation of TunnelData::LampAttributes::LampAttributes"/>
        <CustomAttribute name="Notes on Test Strategy" value="Values for height and width should result in correctly calculated area"/>
        <CustomAttribute name="Test Inputs" value="height=2 &#10;width=2"/>
        <CustomAttribute name="Expected Results" value="Return value=4"/>
        <CustomAttribute name="Test Case Review Notes" value="2x2 for area.  Need more boundary conditions"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="lampattributes class must be initialised"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="first review"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5300" type="Low Level Test">
        <Description>Verify that emergency backup battery drain is calculated for a given type of device</Description>
        <Parent requirement="LLR_0210"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="-Constructor Test Case&#10;height=2 &#10;width=2&#10;ThisModel=TunnelData:Guide&#10;&#10;-Test Case 2&#10;width=2&#10;ThisModel=TunnelData:Duo&#10;height=2&#10;&#10;-Test Case 3&#10;width=2&#10;ThisModel=TunnelData:Announcer&#10;height=2&#10;&#10;-Test Case 4&#10;width=2&#10;ThisModel=TunnelData:LightSolo&#10;height=2"/>
        <CustomAttribute name="Expected Results" value="-Constructor Test Case&#10;height=2 &#10;width=2&#10;ThisModel=TunnelData:Guide;  &#10;&#10;-Test Case 2&#10;Return value=29&#10;&#10;-Test Case 3&#10;Return value=5&#10;&#10;-Test Case 4&#10;Return value=0"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="Lampattributes class is instantiated and initialised"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5310" type="Low Level Test" tcf="Lamptype.tcf">
        <Description>Verify that LampType::LampType instantiates the LampType class</Description>
        <Parent requirement="LLR_0220"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="N/A"/>
        <CustomAttribute name="Expected Results" value="TBrun sequence shows that Lamptype was instantiated and structural coverage report confirms that initialisation occurred as expected"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value=""/>
        <CustomAttribute name="Assumptions and constraints" value="I/O view doesn't contain any Inputs or outputs for this constructor creation test case"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamptype.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5320" type="Low Level Test" tcf="Lamptype.tcf">
        <Description>Verify that LampType::InitialiseLamptype initialises a lamp correctly given the maximum power, highest percentage output and lowest percentage output</Description>
        <Parent requirement="LLR_0230"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="HighestPercentOutput=0.8&#10;LowestPercentOutput=0.2&#10;MaximumPower=5000&#10;"/>
        <CustomAttribute name="Expected Results" value="mMinimumPower=3999&#10;mMinimumLumens=8.00E+02&#10;mMaximumLumens=4.00E+03&#10;mMaximumPower=5000&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="The Lamptype class must be instantiated with the sequences prior to the invocation of GetPowerRequired"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamptype.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5330" type="Low Level Test" tcf="Lamptype.tcf">
        <Description>Verify that LampType::GetMinimumLumes is correctly retrieving the minimum lumens allowed for a given lamp</Description>
        <Parent requirement="LLR_0240"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mMaximumLumens=6000&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Return Value=6.00E+03&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="The Lamptype class must be instantiated with the sequences prior to the invocation of GetPowerRequired"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamptype.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5340" type="Low Level Test" tcf="Lamptype.tcf">
        <Description>Verify that LampType::GetMaximumLumes is correctly retrieving the maximum lumens allowed for a given lamp</Description>
        <Parent requirement="LLR_0250"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mMinimumLumens=2000&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Return Value=2.00E+03&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="The Lamptype class must be instantiated with the sequences prior to the invocation of GetPowerRequired"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamptype.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0240" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each lamp
</Description>
        <Parent requirement="HLR_0230"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data from nominal photometer input values&#10;&#10;2) Confirmation of expected output based on analysis of the recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify each lamp is being reported on (zero is acceptable)&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify each lamp is being reported on (zero is acceptable)"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0080" type="External Task" program="RunTest8">
        <Description>The tunnel software output stream will provide the total cell demand 

</Description>
        <Parent requirement="HLR_0100"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of HMI inputs of entering nominal range photometer inputs&#10;2)  Resulting output data from nominal range photometer inputs&#10;3)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);  Check output.  Sequence (2, 1,4 0);  Checkoutput&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);  Check output.  Sequence (2, 1,4 0);  Checkoutput"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;: To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;: Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;: (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;: (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;: See HMI and photometer invalid values&quot;&#10;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="HMI Input/Output"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5350" type="Low Level Test" tcf="Lamptype.tcf">
        <Description>Verify that LampType::GetPowerRequired is calculating the power required for a given lamp is being correctly using the provided formula in the requirement</Description>
        <Parent requirement="LLR_0260"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="LumensRequired=5000&#9;&#9;&#10;mMaximumPower=6000&#10;mMinimumPower=4000&#10;mMinimumLumens=3000&#10;mMaximumLumens=6000&#10;"/>
        <CustomAttribute name="Expected Results" value="Procedure Returns=5333&#10;"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="The Lamptype class must be instantiated with the sequences prior to the invocation of GetPowerRequired"/>
        <CustomAttribute name="Assumptions and constraints" value=""/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Lamptype.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5360" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5370" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0170" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each lamp
</Description>
        <Parent requirement="HLR_0170"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff does returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_5380" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5390" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5400" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5410" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5420" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_6090" type="Code Review">
        <Description>Adherence to MISRA-C++:2008
</Description>
        <TciProperty Type="Code Review" Name="MISRA-C++:2008" Description="Code Review Standard" Level="Required" ViolationNumber="" ConditionSign="==" ConditionNumber=""/>
        <TciProperty Type="Code Review" Name="MISRA-C++:2008" Description="Code Review Standard" Level="Required (Checking)" ViolationNumber="" ConditionSign="==" ConditionNumber=""/>
        <TciProperty Type="Code Review" Name="MISRA-C++:2008" Description="Code Review Standard" Level="Advisory" ViolationNumber="" ConditionSign="==" ConditionNumber=""/>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Placeholder io="output" type="Artifact" name="Code Review Report Artifact Placeholder"/>
        <Artifact io="output" callgraph="Callgraph - Programming Standards">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase number="TCI_5430" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0090" type="External Task" program="RunTest9">
        <Description>Name:  Soiling factor calculation for dirty
Description:  Verify that soiling factor is calculated correctly per formula described in LLR_0355 in cases where the lamp is not clear 

Inputs:
1, 19 mAps

Expected Output: 

Total Cell Demand: 173840 at 8692 per metre
 Lumens: 48000 Power Setting: 400 for lamp ID: 40900
 Lumens: 48000 Power Setting: 400 for lamp ID: 40901
 Lumens: 19710 Power Setting: 173 for lamp ID: 40902
 Lumens: 19710 Power Setting: 173 for lamp ID: 40903
 Lumens: 48000 Power Setting: 400 for lamp ID: 40904
Total Cell Demand: 183420 at 9171 per metre





The Tunnel software output produced for varying levels of days since cleaning will shows a reduction of 50 percent reduction over a period of 182 days

</Description>
        <Parent requirement="HLR_0110"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of HMI inputs of entering days since cleaning values&#10;2)  Resulting output data from nominal range photometer inputs&#10;3)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Days since cleaning input data set&#10;&#10;Purpose&#9;&#9;&#9;:  To verify the tunnel lighting software can correctly process nominal range values for days since cleaning&#10;&#10;Description&#9;&#9;&#9;:  Integer data set (0,1, 50, 90, 91, 181, 182)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;:  Y&#10;&#10;Time/Event sequence&#9;&#9;: Can be entered only after the &quot;&quot;set days since cleaning selection&quot;&quot; is made from the HMI&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;: (0 - 182)&#10;&#10;Nominal, robustness, worst case inputs&#9;: (-1, 0, 182, 183, 99999)&#10;&#10;Invalid data types&#9;&#9;: real, non numerical&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5440" type="Low Level Test" tcf="Mountings.tcf">
        <Description>Verify that the  Mounting Area class is correctly instantiated given nominal values of height and width
</Description>
        <Parent requirement="LLR_0310"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="l=30&#10;b=20; "/>
        <CustomAttribute name="Expected Results" value="length=30; &#10;breadth=20"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="Return values for stubs must be set.  See Inputs.  MyLamp must be instantiated in previous test cases"/>
        <CustomAttribute name="Assumptions and constraints" value=""/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="first review"/>
        <CustomAttribute name="Type/Class" value="Configuration"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Mountings.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5450" type="Low Level Test" tcf="Mountings.tcf">
        <Description>Verify that when given a lamp width and height for a nominal range values for length and breadth, the number of lamps are calculated by NumLamps such that the function returns (length/width * breadth/height)</Description>
        <Parent requirement="LLR_0320"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="l=30, b=20;  MyLamp.Width=3;  MyLamp.Height=2"/>
        <CustomAttribute name="Expected Results" value="Return value=100 (num)"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Prerequisite Conditions" value="Return values for stubs must be set.  See Inputs.  MyLamp must be instantiated in previous test cases"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Configuration"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Mountings.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5460" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that all instance of the SystemData class are instantiated</Description>
        <Parent requirement="LLR_0330"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5470" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::GetDaysBetweenClearning returns the mDaysBetweenCleaning correctly</Description>
        <Parent requirement="LLR_0370"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mTheLampType.mMaximumLumens=(0,0); &#10;mTheLampType.mMinimumLumens=(0,0); &#10;mTheLampType.mMaximumPower=(0,0);  &#10;mTheLampType.mMinimumPower=(0,0);  &#10;ThisLampID=Brightest; &#10;TunnelData:LampType::GetMinimumLumens &lt;Stub&gt;;  "/>
        <CustomAttribute name="Expected Results" value="Return value=0.0;  &#10;GetMinimumLumens &lt;Stub&gt; minimum one hit;  "/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0180" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each lamp
</Description>
        <Parent requirement="HLR_0180"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5480" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::GetDaysBetweenClearning returns the mDaysBetweenCleaning correctly</Description>
        <Parent requirement="LLR_0380"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mTheLampType.mMaximumLumens=(0,0); &#10;mTheLampType.mMinimumLumens=(0,0); &#10;mTheLampType.mMaximumPower=(0,0); &#10;mTheLampType.mMinimumPower=(0,0);  &#10;ThisLampID=Brightest; &#10;TunnelData:LampType::GetMinimumLumens &lt;Stub&gt;;  "/>
        <CustomAttribute name="Expected Results" value="Return value=0.0;  GetMinimumLumens &lt;Stub&gt; minimum one hit;  "/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5490" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::GetEmergencyLampLumens returns the mEmergencyLampLumens correctly</Description>
        <Parent requirement="LLR_0390"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mEmergencyLampLumens=0.0"/>
        <CustomAttribute name="Expected Results" value="Return value=0.0"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5500" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::DaysSinceCleaning returns the mDaysSinceCleaning correctly</Description>
        <Parent requirement="LLR_0400"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mDaysSinceCleaning=0"/>
        <CustomAttribute name="Expected Results" value="Return value=0"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5100" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that soiling factor is calculated correctly per formula described in LLR_0355 in cases where the lamp is not clear 
</Description>
        <Parent requirement="LLR_0350"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="Soiling factor calculation for dirty"/>
        <CustomAttribute name="Test Inputs" value="Inputs:&#10;mDaysSinceClearning= 182&#10;mDaysBetweenCleaning= 182&#10;SoiledEfficiency= 50&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output: &#10;SoilingFactor =2.0"/>
        <CustomAttribute name="Test Case Review Notes" value="Boundary value populated in nominal range"/>
        <CustomAttribute name="Safety Level" value="c"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Startup and initialisation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5510" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::GetDaysBetweenClearning returns the mDaysBetweenCleaning correctly</Description>
        <Parent requirement="LLR_0410"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mDaysBetweeenCleaning=0"/>
        <CustomAttribute name="Expected Results" value="Return value=0"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5520" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that TunnelData::SystemData::GetExitSignSpacing returns the mExistSignSpacing correctly</Description>
        <Parent requirement="LLR_0420"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mExitSignSpacing=0;  "/>
        <CustomAttribute name="Expected Results" value="Return value=0"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0100" type="External Task" program="RunTest9">
        <Description>The Tunnel software output produced for the full range of cleanliness factors observable from the results (this is really not testable)
</Description>
        <Parent requirement="HLR_0115"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Record of HMI inputs for days since cleaning to drive efficiency factor from 0 to 1&#10;&#10;2)  Resulting output data from days since cleaning and nominal photometer inputs&#10;&#10;3)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences.  Based on implemented calculation of demand, infer 0-1 (0% too 100%)&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences.  Based on implemented calculation of demand, infer 0-1 (0% to 100%)"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Days since cleaning input data set&#10;&#10;Purpose&#9;&#9;&#9;:  To verify the tunnel lighting software can correctly process nominal range values for days since cleaning&#10;&#10;Description&#9;&#9;&#9;:  Integer data set (0,1, 50, 90, 91, 181, 182)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;:  Y&#10;&#10;Time/Event sequence&#9;&#9;:  Can be entered only after the &quot;&quot;set days since cleaning selection&quot;&quot; is made from the HMI&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;: (0 - 182)&#10;&#10;Nominal, robustness, worst case inputs&#9;: (-1, 0, 182, 183, 99999)&#10;&#10;Invalid data types&#9;&#9;: real, non numerical&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_5530" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify that the Siren spacing is returned upon query</Description>
        <Parent requirement="LLR_0430"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="mSirenSpacing"/>
        <CustomAttribute name="Expected Results" value="return value = 0"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Safety Level" value="a"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5540" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0440"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5550" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0450"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5560" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0460"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5570" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0470"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0190" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for all lamps.  These must be compared to expected output files to ensure that appropriate output levels commands are being sent
</Description>
        <Parent requirement="HLR_0190"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set; Sequence (3); Verify only lamps needed for emergency power conditions are being utilized.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand for each set of lamps is the sum of Lumens for each lamp in that set; Sequence (3); Verify only lamps needed for emergency power conditions are being utilized."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_5580" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0480"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_6100" type="Quality Review">
        <Description>Quality Review</Description>
        <TciProperty Type="Quality Review" Name="Maintainability" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="Clarity" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="Testability" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="Complexity Metrics" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="Loop/Interval Analysis" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="LCSAJ and Unreachability" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <TciProperty Type="Quality Review" Name="Dataflow Information" Description="Quality Review Section" Level="" ViolationNumber="" ConditionSign="" ConditionNumber=""/>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Placeholder io="output" type="Artifact" name="Quality Review Report Artifact Placeholder"/>
        <Artifact io="output" callgraph="Callgraph - All Metrics">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase number="TCI_5590" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0490"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5600" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0500"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5610" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0510"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0110" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for each zone

</Description>
        <Parent requirement="HLR_0120"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data from any nominal range inputs for photometer.&#10;&#10;2)  Input data from the tunnel configuration file&#10;&#10;3)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:&#10;Minimum acceptable results conditions:&#10;Maximum system breaks that may occur:&#10;Allowable severity of processing errors:&#10;Conditions for inconclusive results or retest:&#10;Output conditions that imply irregularities in input data:&#10;Indication of readiness for next test:&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences.  Based on implemented calculation of demand, infer 0-1 (0% too 100%)&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (2,0); Store output  Sequence (2, 182); Store output;  Verify cell demand differences.  Based on implemented calculation of demand, infer 0-1 (0% to 100%)"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;: Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_5620" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0520"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase number="TCI_5630" type="Low Level Test">
        <Description>Low Level Requirements based tests</Description>
        <Parent requirement="LLR_0530"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5640" type="Low Level Test" tcf="System_Data.tcf">
        <Description>Verify the Tunnel Data base values are initialised to zero</Description>
        <Parent requirement="LLR_0340"/>
        <CustomAttribute name="Types of data to be recorded" value="Regression Report, Dynamic Coverage Analysis Report"/>
        <CustomAttribute name="Criteria for evaluating results" value="Expected and actual values for outputs must match.  Review TBrun regression report"/>
        <CustomAttribute name="Test Procedure Outline" value="TBrun sequence"/>
        <CustomAttribute name="Test Inputs" value="pSystemDataArray=(0,0,0,0,0,0,0,0,0);  &#10;mTheLampType[0] = ((0.0,0,0.0,0),(0.0,0,0.0,0));  &#10;mTheLampType[1] = ((0.0,0,0.0,0),(0.0,0,0.0,0))"/>
        <CustomAttribute name="Expected Results" value="mDaysBetweenCleaning=0;&#10; mEmergencyLampLumens=0.0; &#10;mExitSignSpacing=0 ; &#10;mHighestPercentOutputmLamp=0; &#10;TypeWatts[0]=0; &#10;mLampTypeWatts[1]=0; &#10;mLowestPercentOutput=0;&#10;mSirenSpacing=0; &#10;mSoiledEfficiency=0;"/>
        <CustomAttribute name="Test Case Review Notes" value="Basic data populated"/>
        <CustomAttribute name="Category of test" value="Unit"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="first review"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\System_Data.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="Low Level Tests" number="TCI_5125" type="Low Level Test" tcf="Cell.tcf">
        <Description>Verify that Cell::SetEmergencyOutputLevel is set to its defined emergency demand level to minimize power demands</Description>
        <Parent requirement="LLR_0030"/>
        <CustomAttribute name="Types of data to be recorded" value=""/>
        <CustomAttribute name="Criteria for evaluating results" value="Stub Hits correspond with expected results"/>
        <CustomAttribute name="Test Inputs" value="LumensDemandPerMetre=5000&#10;CellSpacing=20&#10;mLuminaireSetSize=3&#10;mLampTypeMinLumens[0..1]=2000&#10;mLampTypeCount[0..1]=5,10&#10;mLampTypeMaxLumens[0..1]=6000,4000&#10;"/>
        <CustomAttribute name="Expected Results" value="Stub Hits &amp; Validation Table &#10;&#10;&#10;Procedure  Hits  Fails  &#10;TunnelData::Lamp::SetLumensOutput  12  &#10;"/>
        <CustomAttribute name="Test Case Review Notes" value="Verify that stub hits are adequate for checking expected outputs.  Doesn't appear so"/>
        <CustomAttribute name="Category of test" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="A cell class is instantiated and initialised in the sequence"/>
        <CustomAttribute name="Level" value="Low Level"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Emergency"/>
        <Placeholder io="output" type="Artifact" name="TBrun Regression Report Artifact Placeholder"/>
        <Asset io="input" document="tcf_storage\Cell.tcf"/>
        <Tag name="Low Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0200" type="External Task" program="RunTest1">
        <Description>The Tunnel software output  produced from photometer inputs, given a set of input configuration files, will show lamp positioning is determined by configuration inputs on dimensions and zone layout.  The output produced must be compared with expected output data files to verify this calculation is being done correctly</Description>
        <Parent requirement="HLR_0200"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Application configuration file(s) used for testing&#10;&#10;2)  Resulting output data from nominal photometer input values&#10;&#10;3) Confirmation of expected output based on analysis of the recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Ensure existence of Tunnel.ini file&#10;2)  Sequence (1,4); Store output;   Verify that Tunnel.ini settings are correctly reflected in the output&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Ensure existence of Tunnel.ini file&#10;2)  Sequence (1,4); Store output;   Verify that Tunnel.ini settings are correctly reflected in the output"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Standard test Tunnel.ini file set&#10;&#10;Purpose&#9;&#9;&#9;:  Initialise typical parameter tunnel lighting system&#10;&#10;Description&#9;&#9;&#9;:  The Tunnel.ini file describes standard Tunnel dimension parameters, zone layout data, lamp thresholds, and spacing&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  The Tunnel.ini file must be available in the same directory as the Tunnel lighting system application at the time of  launch&#10;&#10;Input Data Control&#9;&#9;:  The Standard Tunnel.ini default values are verified by review process as nominal range values for a typically deployed Tunnel lighting system.  &#10;Contained in the set are incomplete files, and extreme value inputs, and finally a case where the ini file is non-existent&#10;&#10;Min/reasonable values&#9;&#9;:  values for Tunnel width, zone spacing, lamp spacing, and lamp thresholds, span reasonable ranges&#10;&#10;Nominal, robustness, worst case inputs&#9;:   Standard file, incomplete file, extreme value file, non-existent file&#10;&#10;Invalid data types&#9;&#9;: non-existent file, incomplete ini file&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system needs to initialised and executed in order to ensure that the appropriate Tunnel.ini file is used"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  The Tunnel lighting system is not started initially&#10;&#10;2)  Input data is provided to a started instance of the Tunnel lighting system to verify initialisation has assigned output demand values to lamps correctly&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Configuration"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0120" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs will show calculations for all zones</Description>
        <Parent requirement="HLR_0125"/>
        <CustomAttribute name="Types of data to be recorded" value="&quot;1)  Record of HMI inputs for nominal photometer inputs&#10;&#10;2)  Resulting output data from nominal photometer input&quot;&#10;"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Read Zone data from Tunnel.ini;  Verify all lamps in all zones have power settings.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Read Zone data from Tunnel.ini;  Verify all lamps in all zones have power settings."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;: Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_6110" type="Code Coverage">
        <Description>Structural Coverage</Description>
        <TciProperty Type="Code Coverage" Name="Statement Coverage" Description="Code Coverage Metric" Level="" ViolationNumber="" ConditionSign="==" ConditionNumber="100"/>
        <TciProperty Type="Code Coverage" Name="Branch Coverage" Description="Code Coverage Metric" Level="" ViolationNumber="" ConditionSign="==" ConditionNumber="100"/>
        <TciProperty Type="Code Coverage" Name="Modified Condition / Decision Coverage" Description="Code Coverage Metric" Level="" ViolationNumber="" ConditionSign="==" ConditionNumber="100"/>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Placeholder io="output" type="Artifact" name="Dynamic Coverage Report Artifact Placeholder"/>
        <Artifact io="output" callgraph="Callgraph - Pass/Fail + Coverage">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0210" type="External Task" program="RunTest1">
        <Description>The Tunnel software output from photometer inputs will result in luminaries grouped in sets of one two or three.   Given specific configuration values from set of configuration input files expected output files must me compared to the tunnel software output to verify that luminaries grouping is defined as configured</Description>
        <Parent requirement="HLR_0210"/>
        <CustomAttribute name="Types of data to be recorded" value=""/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="Different variant.  Will consider later&#10;"/>
        <CustomAttribute name="Test Inputs" value="&quot;Name:&#10;Purpose:&#10;Description:&#10;Simulated (Y/N):&#10;Time/Event sequence:&#10;Input Data Control:&#10;     min/reasonable values:&#10;     nominal, robustness, worst case inputs:&#10;     invalid data types:&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Emergency"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0130" type="External Task" program="RunTest1">
        <Description>The Tunnel software output produced from photometer inputs shall show straight line calculations each zone</Description>
        <Parent requirement="HLR_0130"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Resulting output data for nominal photometer input values&#10;&#10;2)  Confirmation of expected output based on analysis of recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand and corresponding power settings are straight line formulae&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that total cell demand and corresponding power settings are straight line formulae"/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;: Nominal power state, nominal photometer input&#10;&#10;Purpose&#9;&#9;&#9;:  To verify output of the tunnel lighting system when nominal selections and values are entered&#10;&#10;Description&#9;&#9;&#9;:  Input Sequence (1, 4)&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;: N/A&#10;&#10;Input Data Control&#9;&#9;:  Data can be input by a user as witnessed during formal testing or be streamed in from a controlled input file&#10;&#10;Min/reasonable values&#9;&#9;:  (1, 4-20)&#10;&#10;Nominal, robustness, worst case inputs&#9;:  (1, 4-20); (1, 3, 1, 4-20);&#10;&#10;Invalid data types&#9;&#9;:  See HMI and photometer invalid values&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Test Case Review Notes" value=""/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system application has been started&#10;"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  Start Tunnel HMI or assume started tunnel&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Output calculation"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase group="High Level Tests" number="TCI_0220" type="External Task" program="RunTest1">
        <Description>The Tunnel software output  produced from photometer inputs, given a set of input configuration files, will show lamp grouping is determined by configuration inputs.</Description>
        <Parent requirement="HLR_0215"/>
        <CustomAttribute name="Types of data to be recorded" value="1)  Application configuration file(s) used for testing&#10;&#10;2)  Resulting output data from nominal photometer input values&#10;&#10;3) Confirmation of expected output based on analysis of the recorded data"/>
        <CustomAttribute name="Criteria for evaluating results" value="&quot;Range/Accuracy of acceptable results:    file diffs must match&#10;Allowable severity of processing errors: none&#10;Output conditions that imply irregularities in input data: output actual and expected results files don't match&#10;Indication of readiness for next test:  File diff utility returns results&quot;&#10;"/>
        <CustomAttribute name="Test Procedure Outline" value="&quot;1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store your output;  Verify that luminaire grouping are 1,2, or 3.&quot;&#10;"/>
        <CustomAttribute name="Notes on Test Strategy" value="1)  Start Tunnel HMI or assume started tunnel&#10;2)  Sequence is (1,4);   Store the output;  Verify that luminaire grouping are 1,2, or 3."/>
        <CustomAttribute name="Test Inputs" value="Name&#9;&#9;&#9;:  Standard test Tunnel.ini file set&#10;&#10;Purpose:&#9;&#9;&#9;  Initialise typical parameter tunnel lighting system&#10;&#10;Description&#9;&#9;&#9;:  The Tunnel.ini file describes standard Tunnel dimension parameters, zone layout data, lamp thresholds, and &#10;spacing&#10;&#10;Simulated (Y/N)&#9;&#9;&#9;: Y&#10;&#10;Time/Event sequence&#9;&#9;:  The Tunnel.ini file must be available in the same directory as the Tunnel lighting system application at the time of  launch&#10;&#10;Input Data Control&#9;&#9;:  The Standard Tunnel.ini default values are verified by review process as nominal range values for a typically deployed Tunnel lighting system.  Contained in the set are incomplete files, and extreme value inputs, and finally a case where the ini file is non-existent&#10;&#10;Min/reasonable values&#9;&#9;:  Values for Tunnel width, zone spacing, lamp spacing, and lamp thresholds, span reasonable ranges&#10;&#10;Nominal, robustness, worst case inputs&#9;:  Standard file, incomplete file, extreme value file, non-existent file&#10;&#10;Invalid data types&#9;&#9;: Non-existent file, incomplete ini file&quot;&#10;"/>
        <CustomAttribute name="Expected Results" value="Expected Output files: output_data.txt&#10;test_input_data.txt&#10;verified_output_data.txt&#10;&#10;Project\TestCasesAndProcedures\ExternalTasks\ET (1..13)&#10;&#10;"/>
        <CustomAttribute name="Prerequisite Conditions" value="Tunnel lighting system needs to initialised and executed in order to ensure that the appropriate Tunnel.ini file is used"/>
        <CustomAttribute name="Assumptions and constraints" value="1)  The Tunnel lighting system is not started initially&#10;&#10;2)  Input data is provided to a started instance of the Tunnel lighting system to verify initialisation has assigned output demand values to lamps correctly&#10;"/>
        <CustomAttribute name="Level" value="CSCI"/>
        <CustomAttribute name="Test Case Review" value="Initial creation"/>
        <CustomAttribute name="Type/Class" value="Configuration"/>
        <Tag name="High Level Test"/>
    </TestCase>
    <TestCase number="TCI_6120" type="Dynamic Data Flow Coverage">
        <Description>Dynamic data flow coverage</Description>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Placeholder io="output" type="Artifact" name="Dynamic Data Flow Report Artifact Placeholder"/>
        <Artifact io="output" callgraph="Callgraph - Pass/Fail + Coverage">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Artifact io="output" callgraph="Callgraph - Static">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase number="TCI_6126" type="System Test">
        <Description>Run Tunnel Lighting System in Interactive Mode</Description>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Artifact io="output" callgraph="Callgraph - Pass/Fail + Coverage">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase number="TCI_6130" type="Control Coupling">
        <Description>Control Coupling Analysis</Description>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Placeholder io="output" type="Artifact" name="Control Coupling Artifact Placeholder"/>
        <Artifact io="output" callgraph="Callgraph - Static">
           <Map set="Cpp_tunnel_lighting_system"/>
        </Artifact>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <TestCase number="TCI_6140" type="Build Instrumented Program">
        <Description>Test the Build Process and build the instrumented source code</Description>
        <Parent set="Cpp_tunnel_lighting_system"/>
        <Tag name="High Level Test"/>
        <Map set="Cpp_tunnel_lighting_system"/>
    </TestCase>
    <Program name="Build Instrumented" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="n" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\BuildInstr.bat&quot; &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="Collect Coverage" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="n" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\Gather_Exh.bat&quot; &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="Build Standard" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="n" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\BuildNonInstr.bat&quot; &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest5" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 5  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest10" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 10  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest1" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 1 &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot; $(CWD)</CommandLine>
    </Program>
    <Program name="RunTest2" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 2 &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest11" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 11  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest12" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 12  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest13" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 13  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest4" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 4  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest3" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 3  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="LDRA TBbrowse" path="$(TBeddir)\tbbrowse.exe" opens="tcf" startin="$(Workarea)" detached="n" autorun="" automatable="n">
        <CommandLine>&quot;$(Filepath)&quot;</CommandLine>
    </Program>
    <Program name="RunTest6" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 6  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest7" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 7  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest8" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 8  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest9" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTest.bat&quot; 9  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Program name="RunTest1 Instrumented" path="$(Cmd)" opens="" startin="$(TbpDir:This)" detached="y" autorun="" automatable="y">
        <ExternalTask pass_value="0" results_file=""/>
        <CommandLine>/C &quot;.\TestCasesAndProcedures\ExternalTasks\RunTestInstrumented.bat&quot; 1  &quot;$(TBeddir)&quot; &quot;Cpp_tunnel_lighting_system&quot;</CommandLine>
    </Program>
    <Role name="Developer">
        <Permissions>
            <EditThread/>
            <Verify/>
            <ChangeVerificationGroup/>
            <MapProcedures/>
            <ChangeTciProperties/>
            <RemoveDefects/>
            <SeeAll/>
        </Permissions>
    </Role>
    <Role name="Lead Engineer">
        <Permissions>
            <SeeAll/>
        </Permissions>
    </Role>
    <Role name="Test Engineer">
        <Permissions>
            <SeeAll/>
        </Permissions>
    </Role>
    <Role name="System Engineer">
        <Permissions>
            <SeeAll/>
        </Permissions>
    </Role>
    <Role name="QA">
        <Permissions>
            <EditThread/>
            <SeeAll/>
        </Permissions>
    </Role>
    <User first="Sarah" last="Lawrence" email="Sarah.Lawrence@ldra.com" role="Lead Engineer"/>
    <User first="Shawn" last="Riley" email="Shawn.Riley@ldra.com" role="Test Engineer"/>
    <User first="Jason" last="Black" email="Jason.Black@ldra.com" role="System Engineer"/>
    <User first="Bill" last="Cody" email="Bill.Cody@ldra.com" role="Developer"/>
    <User first="Peter" last="Lee" email="Peter.Lee@ldra.com" role="QA"/>
    <Note subject="Note 2014-11-10 14:03:56" body="this is requirements needs to be reviewed by the SME on power failure" todoStatus="Done">
        <Parent requirement="HLR_0070"/>
        <CustomAttribute name="Note Groups" value="HLR"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Configuration and Initialisation" body="This Human Machine Interface (HMI) requirement is meant for both inputs and output functionality.   The HMI device allows the user to configure the Tunnel lighting system as well as utilize it for simulating external interfaces for testing." todoStatus="Todo">
        <Parent requirement="SYS_0010"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="HMI for both input and output" body="Currently this requirement is written for both input and output via the HMI.  Perhaps it should be broken down into two requirements, one for input and one for output for later decomposition" todoStatus="Todo">
        <Parent requirement="SYS_0010"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="No initialisation details in Tunnel.ini file" body="No specifics provided with regard to the details of initialisation data.  Perhaps default data should be provided to clarify details of initialisation scope, value ranges, valid combinations and so on" todoStatus="Todo">
        <Parent requirement="SYS_0020"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="Vague language" body="The term &quot;necessary granularity&quot; needs to be reviewed.  This makes implementation of the algorithm subject to the interpretation of the term &quot;necessary&quot; " todoStatus="Todo">
        <Parent requirement="SYS_0030"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="Requirement scope unclear" body="This requirement appears to be stating that the photometer shall just exist ... &quot;include a single photometer placed at the entrance of the tunnel&quot; .. The remaining text is informative but does provide details on an acceptance angle &quot; within an acceptance angle subtending 20º over a measurement range of 0-6500 cd/m2&quot;.  Perhaps this should be rolled into the actual requirement.  Additionally the requirement states that the system shall &quot;include&quot;.  This language is vague and shouldn't be used in a requirement" todoStatus="Todo">
        <Parent requirement="SYS_0040"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="Receive inputs only" body="The requirement mentions that the unit will receive inputs but doesn't state what to do with them .. is this correct?" todoStatus="Todo">
        <Parent requirement="SYS_0060"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="Compound requirement" body="This appears to be multiple requirements and may need to be broken up.  Shall &quot;include facilities&quot; is also ambiguous" todoStatus="Todo">
        <Parent requirement="SYS_0080"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="ambiguous wording" body="&quot;Allow efficiency to be optimised&quot;.  This wording is quite ambiguous" todoStatus="Todo">
        <Parent requirement="SYS_0120"/>
        <Tag name="System Requirements"/>
    </Note>
    <Note subject="Appropriate data not clear" body="Requirement HLR_0010 states that the configuration files will provide &quot;appropriate&quot; data.  This language needs to be improved" todoStatus="Todo">
        <Parent requirement="HLR_0010"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Specifics on bounds" body="Boundary values either need to be specified in the requirement or somehow addressed (or deferred to some other reference)" todoStatus="Todo">
        <Parent requirement="HLR_0030"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="It appears that ReadContent isn't" body="It appears that ReadContent isn't" todoStatus="Todo"/>
    <Note subject="Power states specified" body="The power states are not specified in the requirement text.  They need to be provided or referred to within a table" todoStatus="Todo">
        <Parent requirement="HLR_0070"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="compound" body="This may be considered a compound requirement.  Please review" todoStatus="Todo">
        <Parent requirement="HLR_0100"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="straight line formula" body="Straight line formula should be specified via mathematical calculation within the requirement or referred to elsewhere" todoStatus="Todo">
        <Parent requirement="HLR_0130"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Contributory factor ambiguous" body="Contributory factor details need to be provided for each lamp" todoStatus="Todo">
        <Parent requirement="HLR_0160"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Appropriate" body="The use of this is unclear.  Please provide specific value details" todoStatus="Todo">
        <Parent requirement="HLR_0180"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Initialisation values" body="Initialisation values should be specified explicitly " todoStatus="Todo">
        <Parent requirement="LLR_0020"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Multiple shells" body="There are multiple shells used in this requirement" todoStatus="Todo">
        <Parent requirement="LLR_0040"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="duplicate requirement" body="LLR_0100 and LLR_0110 appear to be identical" todoStatus="Todo">
        <Parent requirement="LLR_0110"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Triplicate requirement" body="Perhaps these requirements were supposed to be written specifically for each dimension" todoStatus="Todo">
        <Parent requirement="LLR_0180"/>
        <Parent requirement="LLR_0190"/>
        <Parent requirement="LLR_0200"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Low level or high level" body="This appears to be a high level or system level requirement" todoStatus="Todo">
        <Parent requirement="LLR_0340"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Need to discuss how to better capture expected out" body="Need to discuss how to better capture expected output.  The powered output setting needs to be properly captured.  This isn't being done correctly at the moment" todoStatus="Todo"/>
    <Note subject="HLR_0040 currently doesn't have an ET associated w" body="HLR_0040 currently doesn't have an ET associated with it.  An LLR below it will have an ET associated that tests the exit application function but since its narrow in scope the ET was applied at the LLR Level.  Please review for correctness.  Also should the HLR_0040 have a TCI that points to the LLR's TCI?  Or should the LLR's TCI verify HLR_0040. Consider the possibility of a traceability graph violation " todoStatus="Todo"/>
    <Note subject="Values to be explicitly specified" body="Specific values need to be specified." todoStatus="Todo">
        <Parent requirement="LLR_0490"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Update names per dimension" body="Change requirement name to specific the dimension (ie. Area, height, width)" todoStatus="Todo">
        <Parent requirement="LLR_0180"/>
        <Parent requirement="LLR_0190"/>
        <Parent requirement="LLR_0200"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Implemented in main" body="Does all this functionality really need to be implemented in main?    Suggestions have been made to perhaps break this into more functions.  This should also reduce the cyclomatic complexity associated with main and increase the testability of the main routine and these associated low level requirements" todoStatus="Todo">
        <Parent requirement="LLR_0290"/>
        <Parent requirement="LLR_0289"/>
        <Parent requirement="LLR_0288"/>
        <Parent requirement="LLR_0286"/>
        <Parent requirement="LLR_0287"/>
        <Parent requirement="LLR_0284"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Unmapped Requirements" body="These requirements need to be reviewed and mapped to source code" todoStatus="Todo">
        <Parent requirement="LLR_0500"/>
        <Parent requirement="LLR_0450"/>
        <Parent requirement="LLR_0460"/>
        <Parent requirement="LLR_0490"/>
        <Parent requirement="LLR_0470"/>
        <Parent requirement="LLR_0440"/>
        <Parent requirement="LLR_0530"/>
        <Parent requirement="LLR_0480"/>
        <Parent requirement="LLR_0520"/>
        <Parent requirement="LLR_0510"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="improved language" body="&quot;good output file&quot; needs to be better defined" todoStatus="Todo"/>
    <Note subject="ET execution issues" body="The ETs associated with the TCIs are not executing correctly" todoStatus="Todo"/>
    <Note subject="Text wording clean up" body="corrected language...  if out of bounds inputs are entered, this shall result in the re-query .....&#10;" todoStatus="Done"/>
    <Note subject="Test strategy notes and Test values differ" body="Test Strategy numbers:   (2, 0; 2, 91, 2, 182)&#10;Integer data set:   (0,1, 50, 90, 91, 181, 182)&#10;&#10;these numbers appear to be different.  State why the domain sequence is different from what was originally set from test strategy notes" todoStatus="Todo"/>
    <Note subject="Test case description update" body="This test case description appears to describe only one state change.  The state change occur from nominal operation to power failure state.  Then it verifies that the power failure state is operating as expected.  The transition back to nominal operation isn't documented within this test case.  View input data as well to confirm.  The requirement also appears to require more specifics from visible notes.   Will follow up after the requirement has been modified." todoStatus="Todo"/>
    <Note subject="The text in this requirement needs to be updated t" body="The text in this requirement needs to be updated to reflect the max-min &gt; small and the lumens required &gt; minimum lumens as well as the power calculation formula (implement correctly in the source code)" todoStatus="Todo">
        <Parent requirement="LLR_0260"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Testability of a requirement" body="TCI_0100 states that this requirement is not testable.  Please review requirement for testability" todoStatus="Todo">
        <Parent requirement="HLR_0115"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="These two are file I/O based.  Get .. Read etc. Co" body="These two are file I/O based.  Get .. Read etc. Coverage appears to show that Tunnel.ini wasn't available for reading.   Likely the start in directory needs to be changed" todoStatus="Todo"/>
    <Note subject="Verifying Lightning demand calculation" body="Test strategy suggest that demand calculation should be inferred from output data. No other guidance is given. Please provide additional details.&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" todoStatus="Todo"/>
    <Note subject="Starlight Line Calculation Details Missing" body="It is difficult to determine that a straight line calculation is applied to each zone from the output data.  Furthermore the specifics of the formula should be available to reduce dependency on existing regression valid data set.  The requirement may need to be updated based on the approach taken" todoStatus="Todo">
        <Parent requirement="HLR_0140"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Incomplete Data" body="Test Inputs and Test Strategy need to be filled." todoStatus="Todo"/>
    <Note subject="Requirement should be removed" body="The failed Lamp output handling behaviour should actually be implemented and verified at a lower scope.  The recommendation is to either add a requirement that considers the failure case to augment LLR_0160.  A test should consider the testing the failure case of a Powersetting being less than or equal to zero.  This test should also allow for structural coverage of this condition in the TunnelData::Lamp::SendPowerToLamp method." todoStatus="Todo">
        <Parent requirement="HLR_0190"/>
        <Parent requirement="HLR_0230"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Details on Maximum Output and Minimum Percentage" body="Tester needs to be made aware where Maximum Output is set in configuration file, how it can be altered and where in the minimum percentage allowed per lamp is set.  Finally the tester needs to determine how to observe a lamp being turned off as output level drops below minimum threshold." todoStatus="Todo"/>
    <Note subject="Test scope is ambiguous" body="The requirement HLR_0340 seems to be scoped over data management, storage, and reporting.   The test description is quite generic about how the expected behaviour to be met.  &#10;&#10;More specifics regarding variants of initialisation data (ie. Tunnel.ini) and the specifics to be examined in the output data are needed" todoStatus="Todo">
        <Parent requirement="HLR_0340"/>
        <Tag name="High Level Requirements"/>
    </Note>
    <Note subject="Duplicate TCI" body="Duplicate TCI5120 to remove&#9;&#9;&#9;&#9;&#9;&#9;&#9;" todoStatus="Todo"/>
    <Note subject="This test is really just making sure that something" body="This test is really just making sure that something gets read and put into the &quot;array&quot;.  Perhaps the test modelling should consider WHAT is being put into the data structure" todoStatus="Todo">
        <CustomAttribute name="Note Groups" value="LLR"/>
    </Note>
    <Note subject="Consider measuring the initialised values within t" body="Consider measuring the initialised values within the instantiated lamp.  It would be preferable to have something within the regression report that can be reviewed to confirm that instantiation occured correctly and its values were populated as expected" todoStatus="Todo"/>
    <Note subject="Analysis done in TBrun.  See test case for the act" body="Analysis done in TBrun.  See test case for the actual input values" todoStatus="Todo">
        <CustomAttribute name="Note Groups" value="LLR"/>
    </Note>
    <Note subject="These requirements need to be modified so they req" body="These requirements need to be modified so they require height, width, and area to returned respective and not &quot;dimensions&quot;" todoStatus="Todo">
        <Parent requirement="LLR_0180"/>
        <Parent requirement="LLR_0190"/>
        <Parent requirement="LLR_0200"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="This requirement much too high.  This is more of a" body="This requirement much too high.  This is more of an description of the data base.  This requirement at this scope should really be describing how the database is to be initialised." todoStatus="Todo">
        <Parent requirement="LLR_0340"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="Perhaps Cout data can be captured to show result i" body="Perhaps Cout data can be captured to show result in the regression report to verify that Lumens output is indeed being sent to Stdout" todoStatus="Todo"/>
    <Note subject="Need to capture cout/stdout for this test case to " body="Need to capture cout/stdout for this test case to verify that power setting is being written out correctly" todoStatus="Todo"/>
    <Note subject="Probably need a external task to test these as the" body="Probably need a external task to test these as these are all implemented in main" todoStatus="Todo">
        <Parent requirement="LLR_0270"/>
        <Parent requirement="LLR_0290"/>
        <Parent requirement="LLR_0282"/>
        <Parent requirement="LLR_0289"/>
        <Parent requirement="LLR_0288"/>
        <Parent requirement="LLR_0280"/>
        <Parent requirement="LLR_0286"/>
        <Parent requirement="LLR_0287"/>
        <Parent requirement="LLR_0284"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <Note subject="These requirements are not mapped yet" body="These requirements are not mapped yet" todoStatus="Todo">
        <Parent requirement="LLR_0500"/>
        <Parent requirement="LLR_0450"/>
        <Parent requirement="LLR_0460"/>
        <Parent requirement="LLR_0490"/>
        <Parent requirement="LLR_0470"/>
        <Parent requirement="LLR_0440"/>
        <Parent requirement="LLR_0530"/>
        <Parent requirement="LLR_0480"/>
        <Parent requirement="LLR_0520"/>
        <Parent requirement="LLR_0510"/>
        <Tag name="Low Level Requirements"/>
    </Note>
    <GroupSpecification>
        <Group name="Low Level Requirements" pos="238.077,351.789" document=""/>
        <GroupRel from="Low Level Requirements" name="covers" to="High Level Requirements" description=""/>
        <Group name="High Level Requirements" pos="139.236,185.89" document=""/>
        <GroupRel from="High Level Requirements" name="covers" to="System Level Requirements" description=""/>
        <Group name="System Level Requirements" pos="35,35" document=""/>
        <Group name="High Level Tests" pos="588.382,178.207" document=""/>
        <GroupRel from="High Level Tests" name="covers" to="High Level Requirements" description=""/>
        <Group name="Low Level Tests" pos="634.024,353.743" document=""/>
        <GroupRel from="Low Level Tests" name="covers" to="Low Level Requirements" description=""/>
    </GroupSpecification>    
</Specification>
